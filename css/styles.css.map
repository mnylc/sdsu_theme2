{"version":3,"sources":["init/_variables.scss","base/_root.scss","../node_modules/typey/stylesheets/typey/mixins/_define-type-sizing.scss","../node_modules/typey/stylesheets/typey/mixins/_typeface.scss","../node_modules/typey/stylesheets/typey/_defaults.scss","init/_colors.scss","../node_modules/breakpoint-sass/stylesheets/_breakpoint.scss","base/_html5.scss","base/links/_links.scss","../node_modules/chroma-sass/sass/chroma/_functions.scss","base/headings/_headings.scss","../node_modules/typey/stylesheets/typey/mixins/_font-size.scss","../node_modules/typey/stylesheets/typey/mixins/_line-height.scss","../node_modules/typey/stylesheets/typey/mixins/_spacing.scss","../node_modules/typey/stylesheets/typey/functions/_helpers.scss","base/text/_text.scss","components/divider/_divider.scss","base/grouping/_grouping.scss","init/rtl/_rtl.scss","base/embedded/_embedded.scss","components/button/_button.scss","base/forms/_forms.scss","base/tables/_tables.scss","../node_modules/zen-grids/sass/zen-grids/_grids.scss","layouts/layout-3col/_layout-3col.scss","../node_modules/zen-grids/sass/zen-grids/_functions.scss","layouts/layout-center/_layout-center.scss","layouts/layout-swap/_layout-swap.scss","layouts/layout-front/_layout-front.scss","components/autocomplete/_autocomplete.scss","init/image-url/_image-url.scss","components/box/_box.scss","init/visually-hidden/_visually-hidden.scss","components/visually-hidden/_visually-hidden.scss","components/breadcrumb/_breadcrumb.scss","init/clearfix/_clearfix.scss","components/collapsible-fieldset/_collapsible-fieldset.scss","components/comment/_comment.scss","components/form-item/_form-item.scss","components/form-table/_form-table.scss","components/header/_header.scss","components/hidden/_hidden.scss","components/highlight-mark/_highlight-mark.scss","components/inline-links/_inline-links.scss","components/inline-sibling/_inline-sibling.scss","components/messages/_messages.scss","components/more-link/_more-link.scss","components/nav-menu/_nav-menu.scss","components/navbar/_navbar.scss","components/pager/_pager.scss","components/print-none/_print-none.scss","components/progress-bar/_progress-bar.scss","components/progress-throbber/_progress-throbber.scss","components/resizable-textarea/_resizable-textarea.scss","components/responsive-video/_responsive-video.scss","components/skip-link/_skip-link.scss","components/table-drag/_table-drag.scss","components/tabs/_tabs.scss","components/watermark/_watermark.scss","components/footer/_footer.scss","components/highlight-block/_highlight-block.scss","components/islandora-simple-search/_islandora-simple-search.scss","components/featured-collections/_featured-collections.scss","components/islandora-basic-collection/_islandora-basic-collection.scss","components/menu-header-menu/_menu-header-menu.scss","components/submit-to-collection/_submit-to-collection.scss","components/slideshow/_slideshow.scss","components/mediaplayer/_mediaplayer.scss","components/featured-box/_featured-box.scss","components/browse-collections/_browse-collections.scss","components/featured-object-collection/_featured-object-collection.scss","components/search-result/_search-result.scss","components/book-tools/_book-tools.scss"],"names":[],"mappings":"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","file":"styles.css","sourcesContent":["// Variables\n//\n// Set variables for this site before a library sets its !default value.\n//\n// Style guide: sass.variables\n\n\n// Browser support\n//\n// For older versions of browsers, some Sass relies on the `support-for()` to\n// control whether extra CSS is needed to be output. The `support-for()`\n// function and the `$support-for` variable are documented on the [support-for\n// homepage](https://github.com/JohnAlbin/support-for).\n//\n// Style guide: sass.variables.support-for\n\n// Support the same browsers as normalize.css v3.\n// Possible keys: chrome, edge, firefox, ie, opera, safari, '*'\n$support-for: (\n  // IE 9-11\n  ie:  9,\n  // The last 4 versions of all other browsers.\n  '*': -4,\n);\n\n\n// Font faces, stacks and sizes.\n//\n// Font styling and line heights are controlled by the several variables that\n// used by mixins like `type-layout()`, `margin-top()`, and `margin-bottom()`.\n// These variable and mixins are documented on the [Typey\n// homepage](https://github.com/jptaranto/typey).\n//\n// Style guide: sass.variables.typey\n\n// The font size set on the root html element.\n$base-font-size:    16px;\n\n// The base line height determines the basic unit of vertical rhythm.\n$base-line-height:  24px;\n\n// The font sizes in our type hierarchy as tee shirt sizes.\n$font-size: (\n  xxl:              32px,\n  xl:               24px,\n  l:                20px,\n  m:                $base-font-size,\n  s:                14px,\n  xs:               10px\n);\n\n// Typey allows you to alter font weights site-wide with this map.\n$font-weight: (\n  bold:             bold,\n  medium:           500,\n  normal:           normal,\n  light:            300,\n  lighter:          lighter,\n);\n\n$font-awesome-colour: #667;\n$max-width: 1175px;\n\n\n// The following font family declarations use widely available fonts.\n// A user's web browser will look at the comma-separated list and will\n// attempt to use each font in turn until it finds one that is available\n// on the user's computer. The final \"generic\" font (sans-serif, serif or\n// monospace) hints at what type of font to use if the web browser doesn't\n// find any of the fonts in the list.\n\n// Serif font stacks.\n$times-new-roman: 'Times New Roman', Times, Georgia, 'DejaVu Serif', serif;\n$times:           Times, 'Times New Roman', Georgia, 'DejaVu Serif', serif;\n$georgia:         Georgia, 'Times New Roman', 'DejaVu Serif', serif;\n\n// Sans-serif font stacks.\n$verdana:         Verdana, Tahoma, 'DejaVu Sans', sans-serif;\n$tahoma:          Tahoma, Verdana, 'DejaVu Sans', sans-serif;\n$helvetica:       Helvetica, Arial, 'Nimbus Sans L', sans-serif;\n$arial:           Arial, Helvetica, 'Nimbus Sans L', sans-serif;\n$impact:          Impact, 'Arial Narrow', Helvetica, sans-serif;\n$ropasans:        'Ropa Sans', sans-serif;\n\nh1,\nh2,\nh3 {\n  color: #5a5b5d;\n  margin: 0;\n  font-family: $ropasans;\n  font-weight: normal;\n}\n\n// Monospace font stacks.\n// For an explanation of why \"sans-serif\" is at the end of this list, see\n// http://meyerweb.com/eric/thoughts/2010/02/12/fixed-monospace-sizing/\n$menlo:           Menlo, 'DejaVu Sans Mono', 'Ubuntu Mono', Courier, 'Courier New', monospace, sans-serif;\n\n// The font faces you specify in the $typefaces map can be used in the\n// typeface() mixin.\n$typefaces: (\n  body: (\n    font-family: $verdana,\n  ),\n  monospace: (\n    font-family: $menlo,\n  ),\n  compact: (\n    font-family: $impact,\n    weight: bold,\n    case: uppercase,\n    // We could also specify the following property:\n    // letter-spacing: .5px,\n  ),\n);\n\n// Output a horizontal grid to help with debugging typography.\n$typey-debug: false;\n\n// The length unit in which to output font size and margin values.\n// Supported values: px, em, rem.\n$base-unit:         'rem';\n\n// px fallbacks for rem units are needed for IE 8 and earlier.\n$rem-fallback:      false;\n\n\n// Breakpoints\n//\n// Use the `respond-to()` mixin to use named breakpoints. Documentation is\n// available in the [Breakpoint wiki\n// pages](https://github.com/at-import/breakpoint/wiki/Respond-To).\n//\n// Style guide: sass.variables.breakpoints\n\n@include add-breakpoint(xxxs, (333px, 'no-query' true));\n@include add-breakpoint(xxs,  (444px, 'no-query' true));\n@include add-breakpoint(xs,   (555px, 'no-query' true));\n@include add-breakpoint(s,    (666px, 'no-query' true));\n@include add-breakpoint(m,    (777px, 'no-query' true));\n@include add-breakpoint(l,    (888px, 'no-query' true));\n@include add-breakpoint(xl,   (999px, 'no-query' true));\n@include add-breakpoint(xxl,  (1111px));\n@include add-breakpoint(xxxl, (1222px));\n\n// Output media queries where the above px are converted to ems.\n// @include breakpoint-set('to ems', true);\n\n\n// Zen grids\n//\n// The default grid system is built using the Zen Grids sass module. Full\n// documentation is available on the [Zen Grids website](http://zengrids.com/).\n//\n// Note: if you are more comfortable using another grid system, you can easily\n// remove Zen Grids and its layouts.\n//\n// Style guide: sass.variables.zen-grids\n\n// These are needed for all breakpoints on all layouts.\n$zen-auto-include-grid-item-base: false;\n$zen-box-sizing: universal-border-box;\n\n// First we set the values we need for the mobile version of our layouts (the\n// version that does _not_ appear inside any @media queries.)\n$zen-columns: 1;\n$zen-gutters: 25px;\n\n// Then we set the values we need for each of the layouts at larger media query\n// sizes. Note how the names of the layouts match the names of our breakpoints\n// above. That allows a single zen-respond-to() to both use the proper item\n// from $zen-layouts and from $breakpoints.\n$zen-layouts: (\n  m: (\n    columns: 2,\n    // The gutters in the layouts are larger on mobile.\n    gutters: 25px,\n  ),\n  xl: (\n    columns: 3,\n    gutters: 25px,\n  ),\n);\n\n// See $include-rtl below.\n$zen-rtl-selector: '[dir=\"rtl\"]';\n\n\n// Miscellaneous variables\n//\n// `$indent-amount` controls the amount lists, blockquotes and comments are indented.\n//\n// `$include-rtl` controls whether RTL styles are output. Rather than include a separate `*-rtl.css` file, Zen 6 uses Drupal 8's standard `[dir=\"rtl\"]` selector for RTL language support.\n//\n// weight: 10\n//\n// Style guide: sass.variables.misc\n\n$indent-amount: 2 * $base-font-size;\n\n$include-rtl: true;\n// Automatically turn off Zen Grids' RTL support if $include-rtl is false.\n@if not $include-rtl {\n  $zen-rtl-selector: false !global;\n}\n","// sass-lint:disable no-vendor-prefixes\n\n// Use the saner border-box model for all elements.\n* {\n  @if support-for(firefox, 28) {\n    -moz-box-sizing: border-box;\n  }\n  box-sizing: border-box;\n}\n\nhtml {\n  @include define-type-sizing();\n  // Set default font family to sans-serif.\n  @include typeface(body);\n  // Prevent iOS text size adjust after orientation change, without disabling\n  // user zoom.\n  -ms-text-size-adjust: 100%;\n  -webkit-text-size-adjust: 100%;\n  // On short pages, we want any background gradients to fill the entire height\n  // of the browser.\n  min-height: 100%;\n  font-size: 85%;\n}\n\nbody {\n  // Output a horizontal grid to help with debugging typography. The\n  // $typey-debug variable will toggle its output.\n  @include typey-debug-grid();\n  // Remove default margin and padding.\n  margin: 0;\n  padding: 0;\n  color: color(text);\n  background-color: color(body-background-color);\n}\n\n.front {\n  main {\n    background-color: transparent !important;\n  }\n}\n\n.not-front {\n  main {\n    padding-bottom: 10px;\n  }\n}\n\n.page-title-top {\n  position: relative;\n\n  .view-browse-header-image,\n  .view-browse-facet-page-header-image {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n\n    div {\n      height: 100%;\n      width: 100%;\n    }\n  }\n}\n\n.page-title-top--container {\n  display: table;\n  text-align: left;\n  width: 100%;\n  position: relative;\n\n  h1 {\n    color: color('white');\n    text-shadow: 0 0 2px color(near-black); /* Firefox 3.5+, Opera 9+, Safari 1+, Chrome, IE10 */\n    filter: progid:DXImageTransform.Microsoft.Glow(Color=#000000,Strength=1); /* IE<10 */\n    margin-bottom: 0;\n    font-weight: lighter;\n    margin-bottom: -5px;\n  }\n}\n\naside {\n  padding: 10px;\n\n  .aside-inner {\n    background-color: white;\n    box-sizing: border-box;\n    float: left;\n    padding: 10px;\n    width: 100%;\n  }\n\n  @include zen-respond-to(m) {\n    padding-top: 0;\n  }\n}\n","// Define defaults (use this in the HTML element).\n//\n// @param number $size\n//   (optional) The font-size. Use to set to anything other than $base-font-size.\n// @param number $line-height\n//   (optional) The line-height. Use to set to anything other than $base-line-height.\n//   Set to a ratio when $line-height-as-ratio is true. Will default to $base-line-height-ratio.\n//   Set to false if you do not want to change a ratio of line-height already set.\n@mixin define-type-sizing($size: $base-font-size, $line-height: $base-line-height) {\n  @if $base-unit == rem or $base-unit == em {\n    font-size: $size / $browser-font-size * 100%;\n  }\n  @if $base-unit == px {\n    font-size: $size;\n  }\n\n  @if $line-height != false {\n    @if $line-height-method == \"ratio\" {\n      @if $line-height == $base-line-height {\n        $line-height: $base-line-height-ratio;\n      }\n      line-height: $line-height;\n    }\n    @else {\n      @if $base-unit == rem or $base-unit == em {\n        // In the html element, rem means relative to browser default font size; em means relative to html's font size.\n        line-height: calculate-em-px($line-height, $size);\n      }\n      @if $base-unit == px {\n        line-height: $line-height;\n      }\n    }\n  }\n\n  @if $auto-print-sizing == true {\n    @if $base-unit == rem or $base-unit == em {\n      @media print {\n        font-size: $print-font-size;\n      }\n    }\n    @else {\n      @warn \"As you are not using a relative base unit (rem or em) automatic print media sizing will not work. Set $auto-print-sizing to false to hide this warning\"\n    }\n  }\n}\n","// Embed a typeface.\n//\n// @param string $typeface\n//   A font family from the $typefaces map.\n@mixin typeface($typeface) {\n  $typeface-name: $typeface;\n  $typeface: map-get($typefaces, $typeface);\n\n  $font-family: false;\n  $letter-spacing: false;\n  $weight: false;\n  $case: false;\n\n  // Assign values to variables when $typeface is a keyed map.\n  @if type-of($typeface) == \"map\" {\n    @if map-has-key($typeface, font-family) {\n      $font-family: map-get($typeface, font-family);\n    }\n    @if map-has-key($typeface, letter-spacing) {\n      $letter-spacing: map-get($typeface, letter-spacing);\n    }\n    @if map-has-key($typeface, weight) {\n      $weight: map-get($typeface, weight);\n    }\n    @if map-has-key($typeface, case) {\n      $case: map-get($typeface, case);\n    }\n  }\n\n  // Assign values to variables when $typeface is shorthand.\n  @if type-of($typeface) == \"list\" {\n    @if (list-separator($typeface) == \"comma\") {\n      // This shorthand is just a list of fonts.\n      $font-family: $typeface;\n    }\n    @else {\n      @each $value in $typeface {\n        // This is a font-family.\n        @if type-of($value) == \"list\" {\n          $font-family: $value;\n        }\n        // This is a letter-spacing value.\n        @if type-of($value) == \"number\" {\n          $letter-spacing: $value;\n        }\n        // This is a font-weight value.\n        @if map-has-key($font-weight, $value) {\n          $weight: $value;\n        }\n        // This is a case value.\n        @if type-of($value) == \"string\" and not(map-has-key($font-weight, $value)) {\n          $case: $value;\n        }\n      }\n    }\n  }\n\n  // Output properties.\n  @if $font-family {\n    font-family: $font-family;\n  }\n  @else {\n    @error \"Typeface '#{$typeface-name}' does not have a font-family\";\n  }\n  @if $letter-spacing {\n    @if ($letter-spacing == 0) {\n      letter-spacing: 0;\n    }\n    @else {\n      letter-spacing: calculate-em-px($letter-spacing, $base-font-size);\n    }\n  }\n  @if $weight {\n    font-weight: weight($weight);\n  }\n  @if $case {\n    text-transform: $case;\n  }\n}\n","// The browser font size default. No need to change this.\n// Allowed units: px\n$browser-font-size:        16px !default;\n\n// Allowed units: rem, em or px\n$base-unit:                rem !default;\n\n// The base font size will be used for most calculations involving font-size.\n// Allowed units: px\n$base-font-size:           16px !default;\n\n// The base line height will be used for most calculations involving height.\n// Allowed units: px\n$base-line-height:         24px !default;\n\n// The method to calculate line-height. Allowed values: rhythm or ratio.\n// Rhytm uses a vertical rhythm approach where line-height is specified as\n// a multiple of the $base-line-height.\n// Ratio uses a ratio approach where line-height is specified as a ratio\n// of the elements font-size.\n$line-height-method:       rhythm !default;\n\n// The default ratio of line-height to font-size.\n$base-line-height-ratio:   1.5 !default;\n\n// By default we will provide fallbacks when rem is the base unit.\n$rem-fallback:             true !default;\n\n// By default, when rem or em are the base unit we will output a print suitable\n// media query with the define-type-sizing() mixin. This will take care of all\n// print media type sizing effortlessly.\n$auto-print-sizing:        true !default;\n\n// The pt font-size to be used with the print media query when\n// $auto-print-sizing is enabled.\n// Allowed units: pt\n$print-font-size:          12pt !default;\n\n// Default font sizes\n// Once you redefine the $font-size map it will overwrite all sizes here.\n// Allowed units: px\n$font-size: (\n  xxxl:                    60px,\n  xxl:                     46px,\n  xl:                      32px,\n  l:                       24px,\n  m:                       16px,\n  s:                       14px,\n  xs:                      12px\n) !default;\n\n// Default font weights\n// This map and accompanying function help provide granular control over\n// setting and retrieving static font weights.\n$font-weight: (\n  bold:                    700,\n  normal:                  400,\n  lighter:                 200\n) !default;\n\n// Declare typefaces\n// These can use any key you like, and allow you to set global letter-spacing,\n// weight and case for font-families. You can then use the\n// font-family mixin to embed your font families anywhere you like.\n//\n// Each key in the $typefaces map can either be a keyed map of settings\n// using any combination of the keys below, or it can be a shorthand list\n// of each property value. When using shorthand it doesn't matter what order\n// each value is arranged in, but best practice is to do it in the order:\n// [font-family] [letter-spacing] [weight] [case]\n//\n// @setting list font-family\n//   Any standard CSS font-family. Use typey pre-written stacks or roll your own.\n// @setting number letter-spacing\n//   CSS letter-spacing. Specified as a px value when font-size is the\n//   $base-font-size.\n// @setting string weight\n//   A key from the $font-weight map. Only specify this if you want a consistant\n//   font-weight used accross the board with this typeface.\n// @setting string case\n//   A value for CSS text-transform. Only specify this if you want a consistant\n//   case used accross the board with this typeface.\n$typefaces: () !default;\n\n// Declare typestyles\n// These can use any key you like, and allow you to set an easily reusable type\n// style. They can be as simple as a font-size and line-height, or can go on\n// to encompass a full range of css type properties.\n//\n// Each key in the $typestyles map can either be a keyed map of settings\n// using any combination of the keys below, or it can be a shorthand list\n// of each property value. When using shorthand for $typestyles, the first value\n// must always be font-size. After that it doesn't matter what order each value\n// is arranged in, but best practice is to do it in the order:\n// [font-size] [line-height] [weight] [case]\n//\n// @setting number|string font-size\n//   A size from the $font-size map or px value to be converted\n// @setting number $x line-height\n//   Multiple of line height, ratio or px value to be converted.\n// @setting string weight\n//   A key from the $font-weight map.\n// @setting string case\n//   A value for CSS text-transform.\n$typestyles: () !default;\n\n// Debug grid\n// Shows horizontal lines for each elements line height.\n$typey-debug:              false !default;\n\n// Debug grid coloring\n$typey-debug-color:        #4affff !default;\n\n// Warnings for $base-unit.\n@if $base-unit != px and $base-unit != rem and $base-unit != em {\n  @error \"$base-unit must be one of the following unit types: rem, em or px\";\n}\n\n// Warnings for $base-font-size and $base-line-height.\n@if unit($base-font-size) != px {\n  @error \"$base-font-size must be in px\";\n}\n@if unit($base-line-height) != px {\n  @error \"$base-line-height must be in px\";\n}\n\n// Warnings for $print-font-size.\n@if unit($print-font-size) != pt {\n  @error \"$print-font-size must be in pt\";\n}\n\n// Warnings for $font-size.\n@each $key, $size in $font-size {\n  @if unit($size) != px {\n    @error \"Size '#{$key}' in $font-size map is not specified in px\";\n  }\n}\n\n// Warnings for $font-weight.\n$typey-text-transform-properties: none capitalize uppercase lowercase initial inherit;\n@each $property in $typey-text-transform-properties {\n  @if map-has-key($font-weight, $property) {\n    @warn \"'#{$property}' used in $font-weight map is a potential value of the text-transform property and will conflict when using typey shorthand\";\n  }\n}\n\n// Warnings for $typefaces.\n@each $key, $typeface in $typefaces {\n  @if type-of($typeface) != \"map\" and type-of($typeface) != \"list\" {\n    @error \"Typeface '#{$key}' in $typefaces map must be a keyed map or a shorthand list in the format: [font-family] [letter-spacing] [weight] [case]\";\n  }\n}\n\n// Warnings for $typestyles.\n@each $key, $typestyle in $typestyles {\n  @if type-of($typestyle) == \"list\" {\n    @each $value in $typestyle {\n      @if index($typestyle, $value) == 1 {\n        $allowed-types: \"font-size\", \"px\";\n        $type: typey-check-value($value);\n        @if index($allowed-types, $type) == null {\n          @error \"Incorrect shorthand format used in '#{$key}' in $typestyles map: [font-size] must appear first\";\n        }\n      }\n    }\n  }\n}\n","// sass-lint:disable indentation, no-color-keywords\n\n// Colors\n//\n// Use the `color()` function to add colors to CSS properties. To learn more,\n// [read the Chroma documentation](http://johnalbin.github.io/chroma/).\n//\n// Markup: chroma.twig\n//\n// Weight: -1\n//\n// Style guide: sass.colors\n\n// Define the default color scheme's color names.\n$chroma: define-default-color-scheme('branding', 'The site\\'s main colors. Can be used to define colors in other color schemes.');\n\n$chroma: add-colors((\n  black:                  #000,\n  grey-dark:              ('black' lighten 40%), // #666\n  'grey':                 ('black' lighten 60%), // #999\n  grey-light:             ('black' lighten 80%), // #ccc\n  grey-extra-light:       ('black' lighten 93.33%), // #eee\n  white:                  #fff,\n  dgi_gray:               #888,\n  dgi_anchor:             #3d8396,\n  menu-gradient-start:    #343334,\n  menu-gradient-end:      #5a5b5d,\n  blue:                   #0072b9,\n  red:                    #c00,\n  yellow:                 #fd0,\n  dgi-green:              #419845,\n  teil:                   #00cad2,\n  near-black:             #111,\n  deep-red:               #c00,\n  background:             #efefef,\n  lesser-black:           #1a1818\n));\n\n// Define color names for functional uses.\n$chroma: define-color-scheme('functional', 'Colors used by functional parts of the design.');\n$chroma: add-colors('functional', (\n  // Colors used in the main content area.\n  text:                   'black',\n  text-bg:                'white',\n  header-lnk:             'lesser-black',\n\n  sdsu-red:               'deep-red',\n\n  link:                   'deep-red',\n  link-visited:           ('grey-dark' lighten 20%),\n  link-active:            'teil',\n\n  body-background-color:  'background',\n\n  border:                 'grey-light',\n\n  autocomplete:           'text',\n  autocomplete-bg:        'text-bg',\n  autocomplete-select:    'white',\n  autocomplete-select-bg: 'blue',\n\n  body-bg:                'text-bg',\n\n  button:                 'white',\n  button-disabled:        'grey',\n\n  button-background:      'teil',\n\n  button-link-background: 'white',\n\n  button-link-border:     'teil',\n\n  button-link-color:      'menu-gradient-end',\n\n  fieldset-summary:       'grey',\n  form-error:             'red',\n\n  featured-box:           'near-black',\n\n  mark-highlight:         'red',\n  mark-bg:                'yellow',\n\n  menu-active:            'text',\n\n  preview-bg:             ('yellow' lighten 43%),\n\n  progress-bar:           'blue',\n  progress-bar-bg:        'grey-light',\n  progress-bar-border:    'grey-dark',\n\n  resizable-grippie:      'grey-extra-light',\n\n  row-stripe:             'grey-extra-light',\n  row-disabled:           'grey-light',\n\n  skip-link:              'white',\n  skip-link-bg:           'grey-dark',\n\n  status:                 'blue',\n  status-bg:              (status lighten 62%),\n  status-highlight:       text,\n  warning:                text,\n  warning-bg:             ('yellow' lighten 45%),\n  warning-border:         'yellow',\n  error:                  'red',\n  error-bg:               (error lighten 57%),\n\n  tabs-border:            'border',\n  tabs-bg:                'text-bg',\n  tab:                    'text',\n  tab-text-shadow:        'white',\n  tab-bg:                 ('grey-light' lighten 6.66%),\n  tab-secondary:          'grey-dark',\n\n  table-drag:             ('yellow' lighten 43%),\n  table-select:           ('yellow' lighten 47%),\n\n  watermark:              'grey-extra-light',\n));\n\n$chroma-active-scheme: 'functional';\n","//////////////////////////////\n// Default Variables\n//////////////////////////////\n$Breakpoint-Settings: (\n  'default media': all,\n  'default feature': min-width,\n  'default pair': width,\n\n  'force all media type': false,\n  'to ems': false,\n  'transform resolutions': true,\n\n  'no queries': false,\n  'no query fallbacks': false,\n\n  'base font size': 16px,\n\n  'legacy syntax': false\n);\n\n$breakpoint: () !default;\n\n//////////////////////////////\n// Imports\n//////////////////////////////\n@import \"breakpoint/settings\";\n@import 'breakpoint/context';\n@import 'breakpoint/helpers';\n@import 'breakpoint/parsers';\n@import 'breakpoint/no-query';\n\n@import 'breakpoint/respond-to';\n\n@import \"breakpoint/legacy-settings\";\n\n//////////////////////////////\n// Breakpoint Mixin\n//////////////////////////////\n\n@mixin breakpoint($query, $no-query: false) {\n  @include legacy-settings-warning;\n\n  // Reset contexts\n  @include private-breakpoint-reset-contexts();\n\n  $breakpoint: breakpoint($query, false);\n\n  $query-string: map-get($breakpoint, 'query');\n  $query-fallback: map-get($breakpoint, 'fallback');\n\n  $private-breakpoint-context-holder: map-get($breakpoint, 'context holder') !global;\n  $private-breakpoint-query-count: map-get($breakpoint, 'query count') !global;\n\n  // Allow for an as-needed override or usage of no query fallback.\n  @if $no-query != false {\n    $query-fallback: $no-query;\n  }\n\n  @if $query-fallback != false {\n    $context-setter: private-breakpoint-set-context('no-query', $query-fallback);\n  }\n\n  // Print Out Query String\n  @if not breakpoint-get('no queries') {\n    @media #{$query-string} {\n      @content;\n    }\n  }\n\n  @if breakpoint-get('no query fallbacks') != false or breakpoint-get('no queries') == true {\n\n    $type: type-of(breakpoint-get('no query fallbacks'));\n    $print: false;\n\n    @if ($type == 'bool') {\n      $print: true;\n    }\n    @else if ($type == 'string') {\n      @if $query-fallback == breakpoint-get('no query fallbacks') {\n        $print: true;\n      }\n    }\n    @else if ($type == 'list') {\n      @each $wrapper in breakpoint-get('no query fallbacks') {\n        @if $query-fallback == $wrapper {\n          $print: true;\n        }\n      }\n    }\n\n    // Write Fallback\n    @if ($query-fallback != false) and ($print == true) {\n      $type-fallback: type-of($query-fallback);\n\n      @if ($type-fallback != 'bool') {\n        #{$query-fallback} & {\n          @content;\n        }\n      }\n      @else {\n        @content;\n      }\n    }\n  }\n\n  @include private-breakpoint-reset-contexts();\n}\n\n\n@mixin mq($query, $no-query: false) {\n  @include breakpoint($query, $no-query) {\n    @content;\n  }\n}\n","// HTML5 display definitions\n// ==========================================================================\n\n// Correct `block` display not defined for any HTML5 element in IE 8/9.\n// Correct `block` display not defined for `details` or `summary` in IE 10/11\n// and Firefox.\n// Correct `block` display not defined for `main` in IE 11.\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmain,\nmenu,\nnav,\nsection,\nsummary {\n  display: block;\n}\n\naudio,\ncanvas,\nprogress,\nvideo {\n  @if support-for(ie, 9) {\n    // Correct `inline-block` display not defined in IE 8/9.\n    display: inline-block;\n  }\n  // Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.\n  vertical-align: baseline;\n}\n\n// Prevent modern browsers from displaying `audio` without controls.\naudio:not([controls]) {\n  display: none;\n  // Remove excess height in iOS 5 devices.\n  height: 0;\n}\n\n@if support-for(ie, 10) {\n  // Address `[hidden]` styling not present in IE 8/9/10.\n  [hidden] {\n    display: none;\n  }\n}\n\n// Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.\ntemplate {\n  display: none;\n}\n","// Links\n//\n// Hyperlinks are used to allow the user to navigate to other resources or to\n// download a resource.\n//\n// The order of link states are based on Eric Meyer's article:\n// http://meyerweb.com/eric/thoughts/2007/06/11/who-ordered-the-link-states\n//\n// :visited - A link that has already been visited.\n// :hover   - A link that is being hovered over.\n// :focus   - A link that has been given keyboard focus.\n// :active  - A link that is being actively clicked.\n//\n// Markup: links-a.twig\n//\n// Style guide: base.link\n\n:link,\n%link {\n  color: color(link);\n  text-decoration: none;\n}\n\n:visited {\n  color: color(link-visited);\n}\n\na:hover,\na:focus {\n  // Add your styles.\n  color: color(teil);\n}\n\na:active {\n  color: color(link-active);\n\n  @if support-for(ie, 10) {\n    // Remove the gray background color from active links in IE 10.\n    background-color: transparent;\n  }\n}\n\n// Improve readability of focused elements when they are also in an\n// active/hover state.\na:active,\na:hover {\n  outline: 0;\n}\n\n@media print {\n  // Underline all links.\n  :link,\n  :visited {\n    text-decoration: underline;\n  }\n\n  // Add visible URL after links.\n  a[href]::after {\n    content: ' (' attr(href) ')';\n    font-weight: normal;\n    font-size: $base-font-size;\n    text-decoration: none;\n  }\n\n  // Only display useful links.\n  a[href^='javascript:']::after,\n  a[href^='#']::after {\n    content: '';\n  }\n}\n","// Functions module\n//\n// The main module for Chroma.\n//\n// Weight: -1\n//\n// Style guide: functions\n\n// Import the global variables and internal functions needed by all of Chroma.\n@import './variables';\n@import './internals';\n\n// Initialize the $chroma data structure.\n$chroma: _chroma-init();\n\n\n// is-dangerous-color-keyword($name)\n//\n// This function is used by color(), add-colors() and others to check if the\n// given color name is a \"dangerous\" color keyword. Returns false or causes the\n// Sass compilation to die with an error message containing the name of the\n// dangerous color keyword.\n//\n// If a real Sass color is given as a color name to Chroma, it is in danger of\n// being converted to a hexadecimal value before Chroma can read the name. (This\n// happens when Sass' \"compressed\" output style is used.) And some hex values\n// map to more than one keyword (e.g. gray/grey and fuchsia/magenta), so the\n// original name would be irretrievable.\n//\n// Since Chroma will confuse fuchsia and magenta (among others) under Sass'\n// \"compressed\" output style, it would generate confusing results. To prevent\n// this, Chroma halts Sass compilation when it detects an ambiguous color\n// keyword. While the error only occurs under Sass' \"compressed\" output style,\n// Chroma halts under all output styles. Otherwise, Chroma could behave\n// differently on production vs. development environments. If you are really\n// sure Chroma will never be run with Sass' \"compressed\" output style, you can\n// disable this feature by setting `$chroma-die-on-dangerous-keyword: false;`.\n//\n// $name - The name of the color to check.\n//\n// Style guide: functions.is-dangerous-color-keyword\n@function is-dangerous-color-keyword($name) {\n  // First, double-check if this is a keyword in a string.\n  @if _is-keyword-string($name) {\n    @return false;\n  }\n\n  @if type-of($name) == 'color' {\n    $lookup: '';\n    @if _is-old-libsass() {\n      // Forcibly convert a color keyword into a string with a \"salt\".\n      $lookup: \"keyword:#{$name}\";\n    }\n    @else {\n      // Convert the color to a string.\n      $lookup: inspect($name);\n    }\n    // Check if Sass will convert the color into a hex value that we can't\n    // convert back to a keyword.\n    @if map-has-key($_chroma-dangerous-keywords, $lookup) {\n      @if $chroma-die-on-dangerous-keyword {\n        @error \"Sass will convert #{$name} into a hexidecimal value when it uses the \\\"compressed\\\" output style and Chroma will not be able to determine if the original name was #{map-get($_chroma-dangerous-keywords, $lookup)}. To prevent this error, quote the keyword like this: '#{$name}'.\";\n      }\n      @else {\n        @return map-get($_chroma-dangerous-keywords, $lookup);\n      }\n    }\n    // Check if Sass _has_ converted the color into a hex value that we can't\n    // convert back to a keyword.\n    @else if map-has-key($_chroma-dangerous-converted-keywords, $lookup) {\n      @error \"Sass has converted a #{$_chroma-spelling} keyword into the hexidecimal value, #{$name}, and Chroma was not be able to determine if the original name was #{map-get($_chroma-dangerous-converted-keywords, $lookup)}. To prevent this error, use quotes around the keyword.\";\n    }\n  }\n  @return false;\n}\n\n// is-color-keyword($name)\n//\n// Checks if the given name is a color keyword. Returns false or a string\n// containing the name of the color keyword.\n//\n// $name - The name of the color to check.\n//\n// Style guide: functions.is-color-keyword\n@function is-color-keyword($name) {\n  // First, double-check if this is a keyword in a string.\n  @if _is-keyword-string($name) {\n    @return false;\n  }\n\n  // If a real Sass color is given, it is in danger of being converted to a\n  // hexadecimal value before we can read the name. And some hex values map to\n  // more than one keyword (e.g. gray and grey), so the original name would be\n  // irretrievable.\n  //\n  // While is-dangerous-color-keyword() would normally @error before it\n  // returned, if it does return a true value, we should continue inspecting\n  // $name so we can convert it to a string.\n  $is-dangerous: is-dangerous-color-keyword($name);\n\n  @if type-of($name) == 'color' {\n    $lookup: '';\n\n    @if _is-old-libsass() {\n      // Forcibly convert a color keyword into a string with a \"salt\".\n      $lookup: \"keyword:#{$name}\";\n    }\n    @else {\n      // Convert the color to a string.\n      $lookup: inspect($name);\n    }\n\n    @return if(map-has-key($_chroma-css4-color-keywords, $lookup), map-get($_chroma-css4-color-keywords, $lookup), false);\n  }\n\n  @return false;\n}\n\n// chroma-to-string($name)\n//\n// Cast the color name to a string to ensure color keywords do not cause\n// problems as map keys.\n//\n// $name - The name of the color to convert.\n//\n// Style guide: functions.chroma-to-string\n@function chroma-to-string($name) {\n  // If the name is a color keyword, is-color-keyword() converts it to a string.\n  $is-keyword: is-color-keyword($name);\n  @return if($is-keyword, $is-keyword, $name);\n}\n\n// color([$scheme,] $name)\n//\n// Returns a color value given a key word and optional color scheme. If the\n// named color is not in the color scheme, the color scheme's parent scheme will\n// be searched.\n//\n// Usage:\n// ```scss\n// .ex {\n//   background-color: color(body-bg);\n//   border: 1px solid color(grace, border);\n// }\n// ```\n//\n// $scheme - Optional color scheme to choose from; defaults to\n//           `$chroma-active-scheme`.\n// $name   - The name of the requested color.\n//\n// Style guide: functions.color\n@function color($scheme, $name: null) {\n  @if type-of($name) == 'null' {\n    // The shortcut syntax was used since $name is null. Move the color name to\n    // the $name parameter and set a default value to $scheme.\n    $name: $scheme;\n    $scheme: $chroma-active-scheme;\n  }\n\n  // Confirm the scheme exists.\n  @if not chroma-has-scheme($scheme) {\n    @error 'The #{$_chroma-spelling} scheme \"#{$scheme}\" was not found.';\n  }\n  // Cast the color name to a string to ensure color keywords do not cause\n  // problems as map keys.\n  $name: chroma-to-string($name);\n  // Find the actual scheme used by the named color.\n  $actual-scheme: chroma-has-color($name, $scheme);\n  @if not $actual-scheme {\n    @error 'The #{$_chroma-spelling} \"#{$name}\" was not found.';\n  }\n  $color: map-get(map-get($chroma, 'names'), \"#{$actual-scheme}::#{$name}\");\n  @if $actual-scheme == $scheme {\n    @return map-get($color, 'value');\n  }\n  @else {\n    // The value of $actual-scheme::$name is based on colors in $actual-scheme\n    // and its parent schemes. But one or more of the parent colors may be\n    // defined (overridden) in $scheme too, so we need to check the full\n    // reference chain.\n    $chain: ();\n    $ref: map-get($color, 'reference');\n    @if $ref and map-get($color, 'function') {\n      $chain: append($chain, $color);\n    }\n    @while $ref {\n      $actual-scheme: chroma-has-color($ref, $scheme);\n      $color: map-get(map-get($chroma, 'names'), \"#{$actual-scheme}::#{$ref}\");\n      $ref: map-get($color, 'reference');\n      // Save any color that has a function unless it is the final color in the\n      // reference chain.\n      @if $ref and map-get($color, 'function') {\n        $chain: append($chain, $color);\n      }\n    }\n    // Find the value for the last non-reference in the chain.\n    $value: map-get($color, 'value');\n    // If the reference chain contains functions, we need to recalculate all\n    // the values back up the chain.\n    @if length($chain) > 0 {\n      @for $i from length($chain) through 1 {\n        $function: map-get(nth($chain, $i), 'function');\n        $parameters: map-get(nth($chain, $i), 'parameters');\n        $parameters: set-nth($parameters, 1, $value);\n        $value: call($function, $parameters...);\n      }\n    }\n    @return $value;\n  }\n}\n\n// define-color-scheme($scheme [, $description] [, $parent])\n//\n// Define a new color scheme and, optionally, set its description and parent\n// color scheme.\n//\n// When searching for a color and the color scheme does not define that\n// particular color, the parent color scheme will be checked to see if it\n// defines that color.\n//\n// By default, all color schemes inherit their colors from the default color\n// scheme. Optionally, a color scheme can choose to inherit from a different\n// color scheme by specifying the `$parent` parameter.\n//\n// Usage:\n// ```scss\n// $chroma: define-color-scheme(taiwan, \"Taiwan's colors\");\n// $chroma: define-color-scheme(taipei, \"Taipei's colors\", $parent: taiwan);\n// ```\n//\n// $scheme      - The name of the new color scheme.\n// $description - Optional description of the color scheme.\n// $parent      - The parent color scheme to inherit colors from; defaults to\n//                `default` (i.e. `$CHROMA_DEFAULT_SCHEME`).\n//\n// Style guide: functions.define-color-scheme\n@function define-color-scheme($scheme, $description: '', $parent: $CHROMA_DEFAULT_SCHEME) {\n  // Check if we are defining the default color scheme.\n  @if $scheme == $CHROMA_DEFAULT_SCHEME {\n    $parent: false;\n  }\n\n  // Check parent reference exists.\n  @if $parent and not chroma-has-scheme($parent) {\n    @error 'Cannot set the parent of #{scheme} to \"#{$parent}\" because the #{$_chroma-spelling} scheme \"#{$parent}\" was not found.';\n  }\n\n  $schemes: map-merge(\n    map-get($chroma, 'schemes'),\n    ($scheme: (\n      'description': $description,\n      'parent': $parent,\n    ))\n  );\n\n  $chroma: map-merge(\n    $chroma,\n    ('schemes': $schemes)\n  ) !global;\n\n  @return $chroma;\n}\n\n// define-default-color-scheme([$name,] $description)\n//\n// Sets the description of the default color scheme.\n//\n// Usage:\n// ```scss\n// $chroma: define-default-color-scheme('Default colors');\n// // or:\n// $chroma: define-default-color-scheme('branding', 'Basic branding colors');\n// ```\n//\n// $name - Optional: default color scheme name; defaults to `default`.\n// $description - Description of the default color scheme.\n//\n// Style guide: functions.define-default-color-scheme\n@function define-default-color-scheme($name, $description: null) {\n  @if type-of($description) == 'null' {\n    // The shortcut syntax was used since $description is null. Move the actual\n    // description to the $description parameter.\n    $description: $name;\n    @return define-color-scheme($CHROMA_DEFAULT_SCHEME, $description);\n  }\n\n  // Remove the old default.\n  $schemes: map-remove(map-get($chroma, 'schemes'), $CHROMA_DEFAULT_SCHEME);\n  // Update all child schemes of the default.\n  @each $scheme-name, $map in $schemes {\n    @if map-get($map, 'parent') == $CHROMA_DEFAULT_SCHEME {\n      $schemes: map-merge(\n        $schemes,\n        ($scheme-name: (\n          'description': map-get($map, 'description'),\n          'parent': $name,\n        ))\n      );\n    }\n  }\n  // Set the new default scheme name and, if needed, the new active scheme.\n  @if $chroma-active-scheme == $CHROMA_DEFAULT_SCHEME {\n    $chroma-active-scheme: $name !global;\n  }\n  $CHROMA_DEFAULT_SCHEME: $name !global;\n  // Add the default scheme (and the updated schemes) back into $chroma.\n  $chroma: map-merge(\n    $chroma,\n    ('schemes': map-merge(\n      $schemes,\n      ($name: (\n        'description': $description,\n        'parent': false,\n      ))\n    ))\n  ) !global;\n\n  @return $chroma;\n}\n\n// add-colors([$scheme,] $colors)\n//\n// Add the colors to an existing color scheme.\n//\n// Usage:\n// ```scss\n// $chroma: add-colors('admiral', (\n//  link:        #0000cc,\n//  nav:         link, // Sets this color to the same value as the \"link\" color.\n//  nav-visited: (nav darken 20%), // Takes the \"nav\" color and passes it\n//                                 // through darken([color], 20%)\n//  nav-focus:   (nav lighten 10%),\n// ));\n// ```\n//\n// If you wish to add colors to the active scheme, you can just use:\n// ```scss\n// $chroma: add-colors((\n//  link:        #0000cc,\n//  nav:         link,\n//  nav-visited: (link darken 20%),\n//  nav-focus:   (link lighten 10%),\n// ));\n// ```\n//\n// $scheme - Optional: color scheme to add colors to; defaults to\n//           `$chroma-active-scheme`.\n// $colors - A Sass map containing the new colors.\n//\n// Style guide: functions.add-colors\n@function add-colors($scheme, $colors: null) {\n  @if type-of($scheme) == 'map' or type-of($scheme) == 'list' {\n    // The shortcut syntax was used since only a map of $colors was given as the\n    // first parameter. Move the map to the $colors parameter and set a default\n    // value to $scheme.\n    $colors: $scheme;\n    $scheme: $chroma-active-scheme;\n  }\n  @if not chroma-has-scheme($scheme) {\n    @error 'The #{$_chroma-spelling} scheme \"#{$scheme}\" was not found.';\n  }\n  @each $color-name, $color-value in $colors {\n    // Cast the color name to a string to ensure color keywords do not cause\n    // problems as map keys.\n    $color-name: chroma-to-string($color-name);\n    $color-function: false;\n    $color-parameters: ();\n    // If the \"value\" is a list, its a value plus a function.\n    @if type-of($color-value) == 'list' {\n      $color-function: nth($color-value, 2);\n      @if not function_exists($color-function) {\n        @error 'The function \"#{$color-function}\" was not found when adding the #{$_chroma-spelling} \"#{$color-name}\".';\n      }\n      // Include the color value in the list of function parameters.\n      @for $i from 1 through length($color-value) {\n        @if $i != 2 {\n          $color-parameters: append($color-parameters, nth($color-value, $i));\n        }\n      }\n      $color-value: nth($color-value, 1);\n    }\n    // If the value given is a color, just add it.\n    @if type-of($color-value) == 'color' and not (_is-old-libsass() and _is-keyword-string($color-value)) {\n      @if $color-function {\n        $color-value: call($color-function, $color-parameters...);\n      }\n      $chroma: _chroma-add-name($scheme, $color-name,\n        $value          : $color-value,\n        $reference      : false,\n        $referenced_by  : (),\n        $function       : $color-function,\n        $parameters     : $color-parameters\n      ) !global;\n    }\n    // If the value given is a reference to another color...\n    @else if type-of($color-value) == 'string' or (_is-old-libsass() and _is-keyword-string($color-value)) {\n      $ref: $color-value;\n      // Find the referenced color.\n      $scheme-of-reference: chroma-has-color($ref, $scheme);\n      @if not $scheme-of-reference {\n        @error 'The #{$_chroma-spelling} \"#{$ref}\" was not found when adding the #{$_chroma-spelling} \"#{$color-name}\".';\n      }\n      $referenced-color: map-get(map-get($chroma, 'names'), \"#{$scheme-of-reference}::#{$ref}\");\n      // Add the new color.\n      $new-value: map-get($referenced-color, 'value');\n      @if $color-function {\n        $color-parameters: set-nth($color-parameters, 1, $new-value);\n        $new-value: call($color-function, $color-parameters...);\n      }\n      $chroma: _chroma-add-name($scheme, $color-name,\n        $value         : $new-value,\n        $reference     : $ref,\n        $referenced_by : (),\n        $function      : $color-function,\n        $parameters    : $color-parameters\n      ) !global;\n      // Document the new color in all the referenced_by lists.\n      @while $ref {\n        $chroma: _chroma-add-name($scheme-of-reference, $ref,\n          $value         : map-get($referenced-color, 'value'),\n          $reference     : map-get($referenced-color, 'reference'),\n          $referenced_by : append(\n            map-get($referenced-color, 'referenced_by'),\n            $color-name\n          ),\n          $function      : map-get($referenced-color, 'function'),\n          $parameters    : map-get($referenced-color, 'parameters')\n        ) !global;\n        $ref: map-get($referenced-color, 'reference');\n        @if $ref {\n          $scheme-of-reference: chroma-has-color($ref, $scheme);\n          $referenced-color: map-get(map-get($chroma, 'names'), \"#{$scheme-of-reference}::#{$ref}\");\n        }\n      }\n    }\n    @else {\n      @error 'Unexpected value, \"#{$color-value}\", given for #{$_chroma-spelling} \"#{$color-name}\".';\n    }\n  }\n\n  @return $chroma;\n}\n\n// define-skins($skins)\n//\n// Defines one or more color schemes as being a skin. For each of the specified\n// color schemes, `define-skins()` will tell Chroma to use the scheme with the\n// corresponding CSS selector when the `skin()` mixin is used.\n//\n// Usage:\n// ```scss\n// $chroma: define-skins((\n//   'scheme1': '.is-scheme1-skin',\n//   'scheme2': '.is-scheme2-skin',\n//   'scheme3': 'html > body.this-works-but-is.way.too.specific.IMHO',\n// ));\n// ```\n//\n// $skins - A map of color schemes and their CSS parent selectors. Each key in\n// the map must be the name of an existing color scheme. The value of each key\n// is the CSS parent selector that triggers the use of the defined scheme\n// instead of the default color scheme. We recommend using a simple CSS selector\n// like `.is-CUSTOMNAME-skin`.\n//\n// Style guide: skin.define-skins\n@function define-skins($skins) {\n  @each $scheme, $selector in $skins {\n    @if not chroma-has-scheme($scheme) {\n      @error 'The #{$_chroma-spelling} scheme \"#{$scheme}\" was not found.';\n    }\n    @if type-of($selector) != 'string' {\n      @error 'The selector for the #{$scheme} skin was a #{type-of($selector)}, but should be a string.';\n    }\n  }\n\n  $chroma: map-merge(\n    $chroma,\n    ('skins': map-merge(\n      map-get($chroma, 'skins'),\n      $skins\n    ))\n  ) !global;\n\n  @return $chroma;\n}\n\n// define-skin($scheme, $selector)\n//\n// Deprecated: Will be removed in Chroma 2.0.0. Use `define-skins()` instead.\n//\n// Weight: 100\n//\n// Style guide: skin.define-skin\n@function define-skin($scheme, $selector) {\n  @warn \"The define-skin() function is deprecated. Use define-skins() instead.\";\n  @return define-skins(($scheme: $selector));\n}\n","// Headings\n//\n// All HTML headings, `<h1>` through `<h6>`, are available. `%h1` through `%h6`\n// classes are also available, for when you want to match the font styling of a\n// heading but still want your text to be displayed inline.\n//\n// Markup: headings-h.twig\n//\n// Style guide: base.headings\n\n// Address variable `h1` font-size and margin within `section` and `article`\n// contexts in Firefox 4+, Safari, and Chrome.\nh1,\n%h1 {\n  // Set the font-size and line-height while keeping a proper vertical rhythm.\n  @include type-layout(xxl, 2);\n\n  // Set 1 unit of vertical rhythm on the top and bottom margins.\n  @include margin-top(1, xxl);\n  @include margin-bottom(1, xxl);\n}\n\nh2,\n%h2 {\n  @include type-layout(xl, 1.5);\n  @include margin-top(1, xl);\n  @include margin-bottom(1, xl);\n}\n\nh3,\n%h3 {\n  @include type-layout(l, 1.5);\n  @include margin-top(1, l);\n  @include margin-bottom(1, l);\n}\n\nh4,\n%h4 {\n  @include type-layout(m, 1);\n  @include margin-top(1, m);\n  @include margin-bottom(1, m);\n}\n\nh5,\n%h5 {\n  @include type-layout(s, 1);\n  @include margin-top(1, s);\n  @include margin-bottom(1, s);\n}\n\nh6,\n%h6 {\n  @include type-layout(xs, 1);\n  @include margin-top(1, xs);\n  @include margin-bottom(1, xs);\n}\n","// Define font-size (with fallback)\n//\n// @param number|string $size\n//   A size from the $font-size map or px value to be converted\n// @param number|string $context\n//   (optional) Only used if em is the $base-unit. The value of the elements/parents\n//   font-size if it differs from $base-font-size. Specified as a t-shirt size or\n//   value in px.\n@mixin font-size($size, $context: $base-font-size) {\n  $allowed-types: \"font-size\", \"px\";\n  $type: typey-validator($size, $allowed-types);\n  @if $base-unit == rem {\n    @if $rem-fallback == true {\n      @if $type == \"font-size\" {\n        $map-size: map-get($font-size, $size);\n        font-size: $map-size;\n      }\n      @if $type == \"px\" {\n        font-size: $size;\n      }\n    }\n  }\n  font-size: font-size($size, $context);\n}\n","// Define line-height (with fallback).\n//\n// @param number $x\n//   Multiple of line height to be used or px value to be converted.\n// @param number|string $context\n//   (optional) Only used if em is the $base-unit. The value of the\n//   elements/parents font-size if it differs from $base-font-size.\n//   Specified as a t-shirt size or value in px.\n@mixin line-height($x, $context: $base-font-size) {\n  $allowed-types: \"multiplier\", \"px\";\n  $type: typey-validator($x, $allowed-types);\n  @if $base-unit == rem and $line-height-method == \"rhythm\" {\n    @if $rem-fallback == true {\n      @if $type == \"multiplier\" {\n        line-height: $x * $base-line-height;\n      }\n      @if $type == \"px\" {\n        line-height: $x;\n      }\n    }\n  }\n  line-height: line-height($x, $context);\n}\n","// Define spacing (with fallbacks).\n//\n// @param string $type\n//   The type of spacing: margin, padding, margin-top, etc.\n// @param number|list|string $spacing\n//   Multiple of $base-line-height to be used or px value to be converted.\n//   Can be a SASS list using the same parameters as the CSS margin property:\n//   i.e. top right bottom left, 1 0 2 0.\n//   Can also be the string \"auto\" when used as margin.\n// @param number|string $context\n//   (optional) Only used if em is the $base-unit. The value of the elements/parents\n//   font-size if it differs from $base-font-size. Specified as a t-shirt size or\n//   value in px.\n@mixin spacing($property, $spacing, $context: $base-font-size) {\n  $allowed-types: \"multiplier\", \"px\", \"list\";\n  $type: typey-validator($spacing, $allowed-types);\n\n  $px-fallback-list: ();\n  $converted-list: ();\n\n  @each $x in $spacing {\n    @if $base-unit == rem {\n      $allowed-types: \"multiplier\", \"px\", \"auto\";\n      $type: typey-validator($x, $allowed-types);\n      @if $type == \"multiplier\" {\n        $spacing: $x * $base-line-height;\n        $px-fallback-list: join($px-fallback-list, $spacing, $separator: space);\n      }\n      @if $type == \"px\" {\n        $px-fallback-list: join($px-fallback-list, $x, $separator: space);\n      }\n      @if $type == \"auto\" {\n        $px-fallback-list: join($px-fallback-list, $x, $separator: space);\n      }\n    }\n    $spacing: spacing($x, $context);\n    $converted-list: join($converted-list, $spacing, $separator: space);\n  }\n\n  @if $base-unit == rem {\n    @if $rem-fallback == true {\n      #{$property}: $px-fallback-list;\n    }\n  }\n  #{$property}: $converted-list;\n}\n\n// Wrapper mixins for various spacing properties.\n// These can be used to provide easily sized spacing in the base unit.\n//\n// @param number|list|string $x\n//   Multiple of $base-line-height to be used or px value to be converted.\n//   Can be a SASS list using the same parameters as the CSS margin property:\n//   i.e. top right bottom left, 1 0 2 0.\n//   Can also be the string \"auto\" when used as margin.\n// @param number|string $context\n//   (optional) Only used if em is the $base-unit. The value of the elements/parents\n//   font-size if it differs from $base-font-size. Specified as a t-shirt size or\n//   value in px.\n@mixin margin($x, $context: $base-font-size) {\n  @include spacing(margin, $x, $context);\n}\n@mixin margin-top($x, $context: $base-font-size) {\n  @include spacing(margin-top, $x, $context);\n}\n@mixin margin-bottom($x, $context: $base-font-size) {\n  @include spacing(margin-bottom, $x, $context);\n}\n@mixin margin-left($x, $context: $base-font-size) {\n  @include spacing(margin-left, $x, $context);\n}\n@mixin margin-right($x, $context: $base-font-size) {\n  @include spacing(margin-right, $x, $context);\n}\n@mixin padding($x, $context: $base-font-size) {\n  @include spacing(padding, $x, $context);\n}\n@mixin padding-top($x, $context: $base-font-size) {\n  @include spacing(padding-top, $x, $context);\n}\n@mixin padding-bottom($x, $context: $base-font-size) {\n  @include spacing(padding-bottom, $x, $context);\n}\n@mixin padding-left($x, $context: $base-font-size) {\n  @include spacing(padding-left, $x, $context);\n}\n@mixin padding-right($x, $context: $base-font-size) {\n  @include spacing(padding-right, $x, $context);\n}\n","// Output a number in the $base-unit.\n//\n// @param number $number\n//   The number (without unit) to output.\n//\n// @return number\n//   The number with the base unit\n@function typey-output-in-base-unit($number) {\n  @if $number == 0 {\n    @return 0;\n  }\n  @if $base-unit == rem {\n    @return $number * 1rem;\n  }\n  @if $base-unit == px {\n    @return $number * 1px;\n  }\n  @if $base-unit == em {\n    @return $number * 1em;\n  }\n}\n\n// Output a number in a chosen unit.\n//\n// @param number $number\n//   The number (without unit) to output.\n// @param string $unit\n//   (optional) The unit to output, either em, px or rem.\n//\n// @return number\n//   The number with the base unit\n@function typey-output-in-unit($number, $unit: $base-unit) {\n  @if $number == 0 {\n    @return 0;\n  }\n  @if $unit == rem {\n    @return $number * 1rem;\n  }\n  @if $unit == px {\n    @return $number * 1px;\n  }\n  @if $unit == em {\n    @return $number * 1em;\n  }\n}\n\n// Remove the unit from a number.\n//\n// @param number $number\n//   The number (with unit) to convert. Allowed units: any\n//\n// @return number\n//   The number without the unit.\n@function typey-strip-unit($number) {\n  @if type-of($number) == \"number\" and not unitless($number) {\n    @return $number / ($number * 0 + 1);\n  }\n  @return $number;\n}\n","// Text-level semantics\n//\n// The elements in this section give semantics to inline text.\n//\n// Weight: 1\n//\n// Style guide: base.text\n\n// Abbreviation / Acroynym\n//\n// The `<abbr>` element makes the meanings of abbreviations and acronyms visible\n// on hover.\n//\n// Markup: text-abbr.twig\n//\n// Style guide: base.text.abbr\n\nabbr[title] {\n  // Address styling not present in IE 8/9/10/11, Safari, and Chrome.\n  border-bottom: 1px dotted;\n\n  @media print {\n    // Add visible title after abbreviations.\n    &::after {\n      content: ' (' attr(title) ')';\n    }\n  }\n}\n\n// Bold\n//\n// The `<strong>` element or the `<b>` element is for emphasizing a snippet of\n// text with a heavier font-weight.\n//\n// Feel free to use `<b>` in HTML5. `<b>` is meant to highlight words or phrases\n// without conveying additional importance.\n//\n// Markup: text-b.twig\n//\n// Weight: -1\n//\n// Style guide: base.text.b\n\nb,\nstrong {\n  // Address style set to `bolder` in Firefox 4+, Safari, and Chrome.\n  font-weight: bold;\n}\n\n// Cite\n//\n// The `<cite>` element represents a reference to a creative work.\n//\n// Markup: text-cite.twig\n//\n// Style guide: base.text.cite\n\ncite {\n  // Add your styles.\n}\n\n// Code\n//\n// The `<code>` element represents a fragment of computer code. The `<var>`\n// element represents a variable. The `<samp>` element represents (sample)\n// output from a program or computing system. The `<kbd>` element represents\n// user input (typically keyboard input.)\n//\n// Markup: text-code.twig\n//\n// Style guide: base.text.code\n\ncode,\nkbd,\nsamp,\nvar {\n  @extend %monospace;\n}\n\n// Deleted text\n//\n// The `<del>` element indicates blocks of text that have been deleted.\n//\n// Markup: text-del.twig\n//\n// Style guide: base.text.del\n\ndel {\n  // Add your styles.\n}\n\n// Definition\n//\n// The `<dfn>` element represents the defining instance of a term.\n//\n// Markup: text-dfn.twig\n//\n// Style guide: base.text.dfn\n\ndfn {\n  // Address styling not present in Safari and Chrome.\n  font-style: italic;\n}\n\n// Italics\n//\n// The `<em>` element or the `<i>` element is used for emphasizing a snippet of\n// text with italics.\n//\n// Feel free to use `<i>` element in HTML5. `<i>` is meant to convey voice,\n// technical terms, etc.\n//\n// Markup: text-i.twig\n//\n// Weight: -1\n//\n// Style guide: base.text.i\n\ni,\nem {\n  // Add your styles.\n}\n\n// Inserted text\n//\n// The `<ins>` element indicates additions to the document.\n//\n// Markup: text-ins.twig\n//\n// Style guide: base.text.ins\n\nins {\n  // Add your styles.\n}\n\n// Marked text\n//\n// The `<mark>` element highlights a run of text due to its relevance in another\n// context.\n//\n// Markup: text-mark.twig\n//\n// Style guide: base.text.mark\n\nmark {\n  background: color(mark-bg);\n  color: color(text);\n}\n\n// Quote\n//\n// The `<q>` element represents an inline quote from another source. Longer\n// quotes should use the `<blockquote>` element.\n//\n// Markup: text-q.twig\n//\n// Style guide: base.text.q\n\nq {\n  // Add your styles.\n}\n\n// Strikethrough text\n//\n// The `<s>` element indicates blocks of text that are no longer relevant.\n//\n// Markup: text-s.twig\n//\n// Style guide: base.text.s\n\ns {\n  // Add your styles.\n}\n\n// Small text\n//\n// For de-emphasizing inline or blocks of text, use the `<small>` element to set\n// text at 80% the size of the parent.\n//\n// Markup: text-small.twig\n//\n// Style guide: base.text.small\n\nsmall {\n  // Address inconsistent and variable font size in all browsers.\n  @include font-size(s);\n}\n\n// Superscript / Subscript\n//\n// The `<sup>` element represents a superscript and the `<sub>` element\n// represents a subscript.\n//\n// Markup: text-sub.twig\n//\n// Style guide: base.text.sub\n\nsub,\nsup {\n  // Prevent `sub` and `sup` affecting `line-height` in all browsers.\n  @include font-size(xs);\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsup {\n  top: -.5em;\n}\n\nsub {\n  bottom: -.25em;\n}\n\n// Underlined text\n//\n// To underline text use the `<u>` element. Not recommended since underlines are\n// used by web browsers to style hyperlinks.\n//\n// Markup: text-u.twig\n//\n// Style guide: base.text.u\n\nu {\n  // Add your styles.\n}\n","// Divider\n//\n// Can be used as an `<hr>`, an empty `<div>` or as a container.\n//\n// Markup: divider.twig\n//\n// Style guide: components.divider\n\n.divider,\n%divider {\n  @include margin(1 0);\n  border: 0;\n  border-top: 1px solid color(border);\n\n  // If used as a container, add a top margin to the first child.\n  > :first-child {\n    @include margin-top(1);\n  }\n}\n","// Dependencies.\n@import 'components/divider/divider';\n\n// Grouping content\n//\n// Weight: 1\n//\n// Style guide: base.grouping\n\n\n// Lists\n//\n// Weight: -1\n//\n// Style guide: base.grouping.lists\n\n// Unordered list\n//\n// The `<ul>` element is a list of items in which the order does <em>not</em>\n// explicitly matter.\n//\n// Markup: grouping-ul.twig\n//\n// Style guide: base.grouping.lists.ul\n\n// Ordered list\n//\n// The `<ol>` element is a list of items in which the order <em>does</em>\n// explicitly matter.\n//\n// Markup: grouping-ol.twig\n//\n// Style guide: base.grouping.lists.ol\n\n// Description list\n//\n// The `<dl>` element is a list of terms with their associated descriptions.\n//\n// Markup: grouping-dl.twig\n//\n// Weight: 1\n//\n// Style guide: base.grouping.lists.dl\n\ndl,\nmenu,\nol,\nul {\n  // Address margins set differently in IE 6/7.\n  @include margin(1 0);\n}\n\n// Turn off margins on nested lists.\nol,\nul {\n  ol,\n  ul {\n    margin: 0;\n  }\n}\n\ndt {\n  // Add your styles.\n}\n\ndd {\n  margin: 0 0 0 $indent-amount;\n\n  @include rtl {\n    margin: 0 $indent-amount 0 0;\n  }\n}\n\n// Address paddings set differently in IE 6/7.\nmenu,\nol,\nul {\n  padding: 0 0 0 $indent-amount;\n\n  @include rtl {\n    padding: 0 $indent-amount 0 0;\n  }\n}\n\n@if support-for(ie, 7) {\n  // Correct list images handled incorrectly in IE 7.\n  nav ul,\n  nav ol {\n    list-style: none;\n    list-style-image: none;\n  }\n}\n\n// Block quotes\n//\n// The `<blockquote>` element is for quoting blocks of content from another\n// source within your document. Wrap the `<blockquote>` around any <abbr\n// title=\"HyperText Markup Language\">HTML</abbr> as the quote. For straight\n// quotes, we recommend a `<p>`.\n//\n// Optionally, add a `<footer>` to identify the source of the quote, wrapping\n// the name of the source work in `<cite>`.\n//\n// Markup: grouping-blockquote.twig\n//\n// Style guide: base.grouping.blockquote\n\nblockquote {\n  // Set 1 unit of vertical rhythm on the top and bottom margin.\n  // Also indent the quote on both sides.\n  @include margin(1 $indent-amount);\n}\n\n// Figures\n//\n// The `<figure>` element can be used to annotate illustrations, diagrams,\n// photos, code listings, etc.\n//\n// Optionally, a `<figcaption>` element inside the `<figure>` represents the\n// caption of the figure.\n//\n// Markup: grouping-figure.twig\n//\n// Style guide: base.grouping.figure\n\nfigure {\n  // Address margin not present in IE 8/9 and Safari.\n  @include margin(1 0);\n}\n\nfigcaption {\n  // Add your styles.\n}\n\n// Horizontal rule\n//\n// The `<hr>` element represents a paragraph-level thematic break, e.g. a scene\n// change in a story, or a transition to another topic within a section of a\n// reference book.\n//\n// Markup: grouping-hr.twig\n//\n// Style guide: base.grouping.hr\n\nhr {\n  @extend %divider;\n  // Address differences between Firefox and other browsers.\n  box-sizing: content-box;\n  height: 0;\n}\n\n// Body copy\n//\n// The default `font-size` and `line-height` properties are applied to the\n// `<body>` element and all paragraphs. In addition, `<p>` (paragraphs) receive\n// a top and bottom margin.\n//\n// Markup: grouping-p.twig\n//\n// Weight: -2\n//\n// Style guide: base.grouping.p\n\np,\npre {\n  // Set 1 unit of vertical rhythm on the top and bottom margin.\n  @include margin(1 0);\n}\n\n// Preformatted text\n//\n// The `<pre>` element represents a block of preformatted text, such as\n// fragments of computer code, ASCII art, etc.\n//\n// Markup: grouping-pre.twig\n//\n// Style guide: base.grouping.pre\n\n%monospace {\n  // Address odd `em`-unit font size rendering in all browsers.\n  // The font-family value ends with \", serif\".\n  @include typeface(monospace);\n  font-size: 1em;\n}\n\npre {\n  @extend %monospace;\n  // Contain overflow in all browsers.\n  overflow: auto;\n}\n","$include-rtl: true !default;\n\n// rtl()\n//\n// Includes Right-To-Left language support by adding a parent selector of\n// `[dir=\"rtl\"]`. Since the dir attribute is usually defined on the html element\n// of a page, using this mixin on a ruleset that matches the html element won't\n// work.\n//\n// Can be turned off globally by setting `$include-rtl: false;`.\n//\n// Style guide: sass.mixins.rtl\n@mixin rtl() {\n  @if $include-rtl {\n    @if & {\n      [dir='rtl'] & {\n        @content;\n      }\n    }\n    @else {\n      [dir='rtl'] {\n        @content;\n      }\n    }\n  }\n}\n","// Embedded content\n//\n// Weight: 2\n//\n// Style guide: base.embedded\n\n// Image\n//\n// An `<img>` element represents an image.\n//\n// Markup: embedded-img.twig\n//\n// Style guide: base.embedded.img\n\nimg {\n  @if support-for(ie, 10) {\n    // Remove border when inside `a` element in IE 8/9/10.\n    border: 0;\n  }\n  @if support-for(ie, 7) {\n    // Improve image quality when scaled in IE 7.\n    // sass-lint:disable no-vendor-prefixes\n    -ms-interpolation-mode: bicubic;\n  }\n}\n\nimg,\nsvg {\n  // Suppress the space beneath the baseline\n  // vertical-align: bottom;\n\n  // Responsive images\n  max-width: 100%;\n  height: auto;\n}\n\n// Scalable vector\n//\n// A `<svg>` element represents an image encoded as a Scalable Vector Graphic.\n//\n// Markup: embedded-svg.twig\n//\n// Style guide: base.embedded.svg\n\nsvg:not(:root) {\n  // Correct overflow not hidden in IE 9/10/11.\n  overflow: hidden;\n}\n","// Button\n//\n// In addition to the default styling of `<button>` and\n// `<input type=\"submit|image|reset|button\">` elements, the `.button` class and\n// its variants can apply buttons styles to various elements (like an `<a>`\n// link).\n//\n// :hover  - Hover styling.\n// :active - Depressed button styling.\n//\n// Markup: button.twig\n//\n// Style guide: forms.button\n\n.button,\n%button {\n  // sass-lint:disable no-vendor-prefixes\n  -moz-appearance: button;\n/*   -webkit-appearance: button; */\n  // Some styles don't apply to <a> links since they are inline elements by default.\n  display: inline-block;\n  padding: 2px 6px;\n  // Address Firefox 4+ setting `line-height` on `input` using `!important` in\n  // the UA stylesheet. And prevent its \"line-height: normal\" rule below from\n  // breaking the \"appearance: button\" styling on the input elements.\n  line-height: inherit;\n  text-decoration: none;\n  // Improve usability and consistency of cursor style between image-type `input` and others.\n  cursor: pointer;\n  color: color(button);\n  background-color: color(button-background);\n  border: 0;\n  padding: 10px 20px;\n\n  &:hover,\n  &:focus,\n  &:active {\n    // Override any link underlines and color changes.\n    text-decoration: none;\n    color: color(button);\n  }\n\n  // Add button variations here.\n\n  // The disabled variation should always go last, so that it overrides any\n  // other variations.\n  &[disabled] {\n    // Re-set default cursor for disabled elements.\n    cursor: default;\n    color: color(button-disabled);\n\n    &:hover,\n    &:focus,\n    &:active {\n      // Override any link underlines and color changes.\n      color: color(button-disabled);\n    }\n  }\n}\n\n.facet-button,\n%facet-button {\n  @extend %button;\n  background-color: color('white');\n  border-radius: 10px;\n  border: 1px solid #ccc;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  color: black;\n\n  a:hover {\n    color: black;\n  }\n}\n\n.button-link,\n%button-link {\n  @extend %button;\n  background-color: color(button-link-background);\n  border: 1px solid color(button-link-border);\n  color: color(button-link-color);\n  padding-top: 3px;\n  padding-bottom: 3px;\n  max-width: 100px;\n  text-align: center;\n  vertical-align: middle;\n  line-height: 1.2em !important;\n  margin-bottom: 3px;\n\n  &:hover,\n  &:active {\n    color: color(button-link-border) !important;\n  }\n}\n","// sass-lint:disable no-vendor-prefixes, no-css-comments\n\n// Dependencies.\n@import 'components/button/button';\n\n// Form defaults\n//\n// These are the default base styles applied to HTML form elements.\n//\n// Component classes can override these styles, but if no class applies a style\n// to an HTML form element, these styles will be the ones displayed.\n//\n// Weight: -1\n//\n// Style guide: forms.base\n\n//\n// The following 8 rules are from normalize.css and help to fix inconsistencies\n// across various browsers. You should probably leave these rules as is and jump\n// to the \"Buttons\" rule on line 95 before you start editing this file.\n//\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  // Keep form elements constrained in their containers.\n  box-sizing: border-box;\n  max-width: 100%;\n  // Correct color not being inherited.\n  // Known issue: affects color of disabled elements.\n  color: inherit;\n  // Correct font properties not being inherited.\n  font: inherit;\n  // Address margins set differently in Firefox 4+, Safari, and Chrome.\n  margin: 0;\n  @if support-for(ie, 7) {\n    // Address `font-family` inconsistency between `textarea` and other form in IE 7\n    @include typeface(body);\n    // Improve appearance and consistency with IE 6/7.\n    *vertical-align: middle;\n  }\n}\n\n// Address `overflow` set to `hidden` in IE 8/9/10/11.\nbutton {\n  overflow: visible;\n}\n\n// Address inconsistent `text-transform` inheritance for `button` and `select`.\n// All other form control elements do not inherit `text-transform` values.\n// Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.\n// Correct `select` style inheritance in Firefox.\nbutton,\nselect {\n  text-transform: none;\n}\n\n// Remove inner padding and border in Firefox 4+.\nbutton::-moz-focus-inner,\ninput::-moz-focus-inner {\n  border: 0;\n  padding: 0;\n}\n\n// 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`\n//    and `video` controls.\n// 2. Correct inability to style clickable `input` types in iOS.\nhtml input[type='button'] /* 1 */,\n[type='reset'],\n[type='submit'] {\n  -webkit-appearance: button; // 2\n}\n\n// Fix the cursor style for Chrome's increment/decrement buttons. For certain\n// `font-size` values of the `input`, it causes the cursor style of the\n// decrement button to change from `default` to `text`.\ninput[type='number']::-webkit-inner-spin-button,\ninput[type='number']::-webkit-outer-spin-button {\n  height: auto;\n}\n\ninput[type='search'] {\n  // Address `appearance` set to `searchfield` in Safari and Chrome.\n  -webkit-appearance: textfield;\n\n  // Remove inner padding and search cancel button in Safari and Chrome on OS X.\n  // Safari (but not Chrome) clips the cancel button when the search input has\n  // padding (and `textfield` appearance).\n  &::-webkit-search-cancel-button,\n  &::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n}\n\n// Buttons\n//\n// Buttons built with the `<button>` element are the most flexible for styling\n// purposes. But `<input>` elements with `type` set to `submit`, `image`,\n// `reset`, or `button` are also supported.\n//\n// Below is the default button styling. To see variations on the button styling\n// see the [button component](section-forms.html#kssref-forms-button).\n//\n// :hover        - Hover styling.\n// :active:hover - Depressed button styling.\n//\n// Markup: forms-button.twig\n//\n// Style guide: forms.base.button\n\nbutton,\n[type='button'],\n[type='reset'],\n[type='submit'] {\n  @extend %button;\n}\n\n// The %text-form-element can be used to style `<input>` text types and\n// `<textarea>` elements at the same time.\n%text-form-element {\n  // Address Firefox 4+ setting `line-height` on `input` using `!important` in\n  // the UA stylesheet.\n  line-height: inherit;\n\n  // Add your styles.\n}\n\n// Inputs\n//\n// The `<input>` element is mostly used for text-based inputs that include the\n// HTML5 types: `text`, `search`, `tel`, `url`, `email`, `password`, `date`,\n// `time`, `number`, `range`, `color`, and `file`.\n//\n// Markup: forms-input.twig\n//\n// Style guide: forms.base.input\n\ninput {\n  &[type='text'],\n  &[type='search'],\n  &[type='tel'],\n  &[type='url'],\n  &[type='email'],\n  &[type='password'],\n  &[type='date'],\n  &[type='time'],\n  &[type='number'] {\n    @extend %text-form-element;\n  }\n\n  &[type='range'] {\n    // Add your styles.\n  }\n\n  &[type='color'] {\n    // Add your styles.\n  }\n\n  &[type='file'] {\n    // Add your styles.\n  }\n}\n\n// Checkboxes\n//\n// If an `<input>` element has the `type='checkbox'` attribute set, the form\n// field is displayed as a checkbox.\n//\n// It's recommended that you don't attempt to style these elements. Firefox's\n// implementation doesn't respect `box-sizing`, `padding`, or `width`.\n//\n// Markup: forms-input-checkbox.twig\n//\n// Style guide: forms.base.input-checkbox\n\n// Radio buttons\n//\n// If an `<input>` element has the `type='radio'` attribute set, the form field\n// is displayed as a radio button.\n//\n// It's recommended that you don't attempt to style these elements. Firefox's\n// implementation doesn't respect `box-sizing`, `padding`, or `width`.\n//\n// Markup: forms-input-radio.twig\n//\n// Style guide: forms.base.input-radio\n\ninput[type='checkbox'],\ninput[type='radio'] {\n  @if support-for(ie, 10) {\n    // Address box sizing set to `content-box` in IE 8/9/10.\n    box-sizing: border-box;\n    // Remove excess padding in IE 8/9/10.\n    padding: 0;\n  }\n  @if support-for(ie, 7) {\n    // Remove excess padding in IE 7.\n    // Known issue: excess padding remains in IE 6.\n    *height: 13px;\n    *width: 13px;\n  }\n}\n\n// Fieldsets\n//\n// The `<fieldset>` element groups a set of form fields, optionally under a\n// common name given by the `<legend>` element.\n//\n// Markup: forms-fieldset.twig\n//\n// Style guide: forms.base.fieldset\n\nfieldset {\n  // Apply borders and padding that keep the vertical rhythm.\n  @include padding(.35 .625 .65);\n  border: 1px solid color(border);\n  // Define consistent border, margin, and padding.\n  margin: 0 2px;\n}\n\nlegend {\n  // Correct `color` not being inherited in IE 8/9/10/11.\n  @if support-for(ie, 11) {\n    border: 0;\n  }\n  // Align legend text with a fieldset's text while removing left padding so\n  // people aren't caught out if they zero out fieldset padding.\n  margin-left: -5px;\n  padding: 0 5px;\n  @if support-for(ie, 7) {\n    // Correct alignment displayed oddly in IE 6/7.\n    *margin-left: -7px;\n  }\n}\n\n// Labels\n//\n// The `<label>` element represents a caption of a form field. The label can be\n// associated with a specific form control by using the `for` attribute or by\n// putting the form control inside the label element itself.\n//\n// Markup: forms-label.twig\n//\n// Style guide: forms.base.label\n\nlabel {\n  // Drupal-style form labels.\n  display: block;\n  font-weight: bold;\n}\n\n// Select list\n//\n// The `<select>` element represents a form field for selecting amongst a set of\n// options.\n//\n// Known limitation: by default, Chrome and Safari on OS X allow very limited\n// styling of `<select>`, unless a `border` property is set.\n//\n// Markup: forms-select.twig\n//\n// Style guide: forms.base.select\n\nselect {\n  // Add your styles.\n}\n\noptgroup {\n  // Don't inherit the `font-weight` (applied by a rule above).\n  // NOTE: the default cannot safely be changed in Chrome and Safari on OS X.\n  font-weight: bold;\n}\n\n// Text areas\n//\n// The `<textarea>` element represents a multi-line plain text form field.\n//\n// Markup: forms-textarea.twig\n//\n// Style guide: forms.base.textarea\n\ntextarea {\n  @extend %text-form-element;\n  // Remove default vertical scrollbar in IE 8/9/10/11.\n  overflow: auto;\n}\n","// Tables\n//\n// The `<table>` element displays tabular data in rows, columns, and cells.\n//\n// Markup: tables-table.twig\n//\n// Weight: 1\n//\n// Style guide: base.table\n\ntable {\n  // Add vertical rhythm margins.\n  @include margin(1 0);\n  // Remove most spacing between table cells.\n  border-collapse: collapse;\n  border-spacing: 0;\n  // Prevent cramped-looking tables\n  width: 100%;\n}\n\ntd,\nth {\n  // Remove most spacing between table cells.\n  padding: 0;\n}\n","// Grids module\n//\n// The “grids” module contains most of the configurable variables and mixins you’ll need to create a layout.\n//\n// Weight: -10\n//\n// Style guide: grids\n\n// Import the global variables needed by all of Zen Grids.\n@import \"./variables\";\n// Import the helper functions.\n@import \"./functions\";\n\n// zen-rtl()\n//\n// Includes inline Right-To-Left language support if the `$zen-rtl-selector` variable is set to `[dir=\"rtl\"]` or some other useful CSS selector.\n//\n// Since `$zen-rtl-selector` defaults to `false`, inline Right-To-Left language support is off by default.\n//\n// $selector = $zen-rtl-selector - The RTL selector for this grid item. See the docs for [`$zen-rtl-selector`](section-grids.html#kssref-grids-variables-rtl-zen-rtl-selector).\n//\n// weight: 20\n//\n// Style guide: grids.zen-rtl\n\n@mixin zen-rtl($selector: $zen-rtl-selector) {\n  @if $selector {\n    @if & {\n      #{$selector} & {\n        @content;\n      }\n    }\n    @else {\n      #{$selector} {\n        @content;\n      }\n    }\n  }\n}\n\n// zen-grid-container()\n//\n// Apply this to create a grid container element.\n//\n// If this grid is nested inside another grid, the `$context` parameter can be used to align the nested grid with the parent grid. `$context` can be set to `none` (the default), `grid-item`, or `flow`.\n//\n// If the nested grid’s container is a child element of the parent grid’s grid item, set `$context: flow`.\n//\n// Otherwise, if the nested grid’s container is the same element as the parent grid’s grid item, set `$context: grid-item` and apply this mixin *after* the [`zen-grid-item()`](#kssref-grids-zen-grid-item) mixin is applied for the parent grid. This mixin removes any gutters on the container since the nested grid will have its own gutters.\n//\n// Common usage:\n// ```\n// @include zen-grid-container();\n// ```\n// or:\n// ```\n// @include zen-grid-container(grid-item);\n// ```\n//\n// $context            = none - If this grid is nested inside another grid, the `$context` parameter can be used to align the nested grid with the parent grid. It can be set to `none`, `grid-item`, or `flow`.\n// $gutters            = $zen-gutters - The width of the gutters for this container. See the docs for [`$zen-gutters`](section-grids.html#kssref-grids-variables-zen-gutters).\n// $gutter-method      = $zen-gutter-method - The gutter method to use for this container. See the docs for [`$zen-gutter-method`](section-grids.html#kssref-grids-variables-zen-gutter-method).\n// $direction          = $zen-direction - The direction to use for this container. See the docs for [`$zen-direction`](section-grids.html#kssref-grids-variables-rtl-zen-direction).\n// $switch-direction   = $zen-switch-direction - Whether to switch the default direction for this container. See the docs for [`$zen-switch-direction`](section-grids.html#kssref-grids-variables-rtl-zen-switch-direction).\n// $rtl-selector       = $zen-rtl-selector - The RTL selector for this container. See the docs for [`$zen-rtl-selector`](section-grids.html#kssref-grids-variables-rtl-zen-rtl-selector).\n//\n// Style guide: grids.zen-grid-container\n@mixin zen-grid-container(\n  $context            : none,\n  $gutters            : $zen-gutters,\n  $gutter-method      : $zen-gutter-method,\n  $direction          : $zen-direction,\n  $switch-direction   : $zen-switch-direction,\n  $rtl-selector       : $zen-rtl-selector\n) {\n\n  $dir: $direction;\n  @if $switch-direction {\n    $dir: zen-direction-switch($dir);\n  }\n\n  @if $context == flow-item {\n    @warn \"zen-grid-container()'s $context cannot be set to: flow-item. It has been set to: flow.\";\n    $context: flow;\n  }\n  @else if $context == grid {\n    @warn \"zen-grid-container()'s $context cannot be set to: grid. It has been set to: grid-item.\";\n    $context: grid-item;\n  }\n\n  // @TODO: This is a pre-IE8 line of code; don't remember why its needed.\n  @if zen-support-for-ie(7) {\n    *position: relative;\n  }\n\n  // We use the \"micro clearfix\", optimized to reduce the number of &.\n  &:before {\n    content: \"\";\n    display: table;\n  }\n  &:after {\n    content: \"\";\n    display: table;\n    clear: both;\n  }\n  @if zen-support-for-ie(7) {\n    *zoom: 1;\n  }\n\n  // Un-do the gutter padding of the parent grid item.\n  @if $context == flow and $gutter-method == padding {\n    margin: {\n      left: -(zen-half-gutter($gutters, left, $dir));\n      right: -(zen-half-gutter($gutters, right, $dir));\n    }\n\n    // If $gutters is an odd number of pixels, we need special RTL handling.\n    @if zen-half-gutter($gutters, left, $dir) != zen-half-gutter($gutters, right, $dir) {\n      @include zen-rtl($rtl-selector) {\n        margin: {\n          left: -(zen-half-gutter($gutters, right, $dir));\n          right: -(zen-half-gutter($gutters, left, $dir));\n        }\n      }\n    }\n  }\n\n  // Prevent any padding from messing up the alignment of the nested grid.\n  @if $context == grid-item or $context == flow {\n    // Copy of undo-zen-apply-gutter-padding()\n    padding: {\n      left: 0;\n      right: 0;\n    }\n  }\n}\n\n// zen-grid-item()\n//\n// Apply this to each grid item. Set the `$column-span` to the number of columns that the grid item spans. And set the `$column-position` to the column number the grid item starts on.\n//\n// To make the grid item float from the right, set the `$direction` to `right`; it defaults to `left` (the value of `$zen-direction`.) For grid items that are floated right, the `$column-position` is counted from the right instead of from the left.\n//\n// Common usage:\n// ```\n// // The grid item spans 2 columns starting from the 3rd column from the left,\n// // e.g. It spans columns 3 and 4 counting from the left.\n// @include zen-grid-item($column-span: 2, $column-position: 3);\n// ```\n// or:\n// ```\n// // The grid item spans 2 columns starting from the 3rd column from the right,\n// // e.g. It spans columns 3 and 4 counting from the right.\n// @include zen-grid-item(2, 3, right);\n// ```\n//\n// $column-span        - Required. The number of columns the grid item will span.\n// $column-position    - Required. The column number the grid item starts on.\n// $direction          = $zen-direction - The floating direction to use for this grid item. See the docs for [`$zen-direction`](section-grids.html#kssref-grids-variables-rtl-zen-direction).\n// $gutters            = $zen-gutters - The width of the gutters for this grid item. See the docs for [`$zen-gutters`](section-grids.html#kssref-grids-variables-zen-gutters).\n// $gutter-method      = $zen-gutter-method - The gutter method to use for this grid item. See the docs for [`$zen-gutter-method`](section-grids.html#kssref-grids-variables-zen-gutter-method).\n// $box-sizing         = $zen-box-sizing - The box sizing to use for this grid item. See the docs for [`$zen-box-sizing`](section-grids.html#kssref-grids-variables-zen-box-sizing).\n// $switch-direction   = $zen-switch-direction - Whether to switch the default direction for this grid item. See the docs for [`$zen-switch-direction`](section-grids.html#kssref-grids-variables-rtl-zen-switch-direction).\n// $rtl-selector       = $zen-rtl-selector - The RTL selector for this grid item. See the docs for [`$zen-rtl-selector`](section-grids.html#kssref-grids-variables-rtl-zen-rtl-selector).\n// $include-base       = $zen-auto-include-grid-item-base - Whether to auto-include the zen-grid-item-base() mixin. See the docs for [`$zen-auto-include-grid-item-base`](section-grids.html#kssref-grids-variables-zen-auto-include-grid-item-base).\n//\n// Style guide: grids.zen-grid-item\n@mixin zen-grid-item(\n  $column-span,\n  $column-position,\n  $direction          : $zen-direction,\n  $columns            : $zen-columns,\n  $gutters            : $zen-gutters,\n  $gutter-method      : $zen-gutter-method,\n  $grid-width         : $zen-grid-width,\n  $box-sizing         : $zen-box-sizing,\n  $switch-direction   : $zen-switch-direction,\n  $rtl-selector       : $zen-rtl-selector,\n  $include-base       : $zen-auto-include-grid-item-base\n) {\n\n  // Calculate the unit width.\n  $unit-width: zen-unit-width($columns, $gutters, $gutter-method, $grid-width);\n\n  // Calculate the item's width.\n  $width: zen-grid-item-width($column-span, $columns, $gutters, $gutter-method, $grid-width, $box-sizing);\n\n  // Calculate the margin from the container's edge.\n  $margin: ($column-position - 1) * $unit-width;\n  @if $gutter-method == margin {\n    $margin: $margin + (floor($column-position) - 1) * $gutters;\n  }\n\n  // Determine the float direction and its reverse.\n  $dir: $direction;\n  @if $switch-direction {\n    $dir: zen-direction-switch($dir);\n  }\n  $rev: zen-direction-switch($dir);\n\n  float: $dir;\n  width: $width;\n  margin: {\n    #{$dir}: $margin;\n    #{$rev}: -100%;\n  }\n  @if zen-support-for-ie(7) {\n    // @TODO: This interpolation fails on libsass 3.3.0: *margin-#{$rev}: -99.9%;\n    #{'*margin-' + $rev}: -99.9%;\n  }\n  @include zen-rtl($rtl-selector) {\n    float: $rev;\n    margin: {\n      #{$rev}: $margin;\n      #{$dir}: -100%;\n    }\n    @if zen-support-for-ie(7) {\n      // @TODO: This interpolation fails on libsass 3.3.0: *margin-#{$rev}: -99.9%;\n      #{'*margin-' + $dir}: -99.9%;\n    }\n  }\n\n  // Include the grid item base mixin.\n  @if $include-base {\n    @include zen-grid-item-base($gutters, $gutter-method, $box-sizing, $direction, $switch-direction, $rtl-selector);\n  }\n  // If the $gutters parameter has been used, set the gutters even if\n  // $include-base is false.\n  @else if $gutters != $zen-gutters and $gutter-method == padding {\n    @include zen-apply-gutter-padding($gutters, $direction, $switch-direction, $rtl-selector);\n  }\n}\n\n// zen-grid-item-base()\n//\n// Applies a standard set of properties for grid items in the layout.\n//\n// See the documentation for the [`$zen-auto-include-grid-item-base`](#kssref-grids-variables-zen-auto-include-grid-item-base) and [`$zen-auto-include-flow-item-base`](section-flow.html#kssref-flow-variables-zen-auto-include-flow-item-base) variables for when to use this mixin.\n//\n// Common usage:\n// ```\n// @include zen-grid-item-base();\n// ```\n//\n// $gutters            = $zen-gutters - The width of the gutters for this grid item. See the docs for [`$zen-gutters`](section-grids.html#kssref-grids-variables-zen-gutters).\n// $gutter-method      = $zen-gutter-method - The gutter method to use for this grid item. See the docs for [`$zen-gutter-method`](section-grids.html#kssref-grids-variables-zen-gutter-method).\n// $box-sizing         = $zen-box-sizing - The box sizing to use for this grid item. See the docs for [`$zen-box-sizing`](section-grids.html#kssref-grids-variables-zen-box-sizing).\n// $direction          = $zen-direction - The floating direction to use for this grid item. See the docs for [`$zen-direction`](section-grids.html#kssref-grids-variables-rtl-zen-direction).\n// $switch-direction   = $zen-switch-direction - Whether to switch the default direction for this grid item. See the docs for [`$zen-switch-direction`](section-grids.html#kssref-grids-variables-rtl-zen-switch-direction).\n// $rtl-selector       = $zen-rtl-selector - The RTL selector for this grid item. See the docs for [`$zen-rtl-selector`](section-grids.html#kssref-grids-variables-rtl-zen-rtl-selector).\n//\n// weight: 10\n//\n// Style guide: grids.zen-grid-item-base\n@mixin zen-grid-item-base(\n  $gutters            : $zen-gutters,\n  $gutter-method      : $zen-gutter-method,\n  $box-sizing         : $zen-box-sizing,\n  $direction          : $zen-direction,\n  $switch-direction   : $zen-switch-direction,\n  $rtl-selector       : $zen-rtl-selector\n) {\n\n  // Specify the padding if the gutter method uses padding.\n  @if $gutter-method == padding {\n    @include zen-apply-gutter-padding($gutters, $direction, $switch-direction, $rtl-selector);\n  }\n\n  // Specify the border-box properties.\n  @if $box-sizing == border-box {\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    box-sizing: border-box;\n  }\n  // Prevent left/right borders since they'll break the layout with content-box.\n  @else if $box-sizing == content-box {\n    border: {\n      left: 0 !important;\n      right: 0 !important;\n    }\n    @if $gutter-method == margin {\n      padding: {\n        left: 0 !important;\n        right: 0 !important;\n      }\n    }\n  }\n\n  @if zen-support-for-ie(7) {\n    @if $box-sizing == border-box and $box-sizing-polyfill-path == \"\" {\n      @warn 'Setting $box-sizing to border-box will fail for IE 7 and earlier because the $box-sizing-polyfill-path is empty.';\n    }\n    @if $box-sizing-polyfill-path != \"\" {\n      *behavior: url($box-sizing-polyfill-path);\n    }\n    @if zen-support-for-ie(6) {\n      // Display inline or double your floated margin!\n      // @see http://www.positioniseverything.net/explorer/doubled-margin.html\n      _display: inline;\n      // Prevent overflowing content from breaking the layout.\n      _overflow: hidden;\n      // In IE6, overflow visible is broken.\n      // @see http://www.howtocreate.co.uk/wrongWithIE/?chapter=overflow%3Avisible%3B\n      _overflow-y: visible;\n    }\n    // Prevent overflowing content from being hidden beneath other grid items.\n    *word-wrap: break-word;\n  }\n}\n\n// zen-new-row()\n//\n// Apply this to a grid item so that it starts a new row.\n//\n// Common usage:\n// ```\n// @include zen-new-row();\n// ```\n// or:\n// ```\n// @include zen-new-row(right);\n// ```\n//\n// $clear             = $zen-direction - The floating direction to use for this grid item. See the docs for [`$zen-direction`](section-grids.html#kssref-grids-variables-rtl-zen-direction).\n// $switch-direction  = $zen-switch-direction - Whether to switch the default direction for this grid item. See the docs for [`$zen-switch-direction`](section-grids.html#kssref-grids-variables-rtl-zen-switch-direction).\n// $rtl-selector      = $zen-rtl-selector - The RTL selector for this grid item. See the docs for [`$zen-rtl-selector`](section-grids.html#kssref-grids-variables-rtl-zen-rtl-selector).\n//\n// Style guide: grids.zen-new-row\n@mixin zen-new-row(\n  $clear              : $zen-direction,\n  $switch-direction   : $zen-switch-direction,\n  $rtl-selector       : $zen-rtl-selector\n) {\n  // Determine the clearing direction.\n  @if $switch-direction {\n    $clear: zen-direction-switch($clear);\n  }\n  clear: $clear;\n\n  @if $clear == left or $clear == right {\n    @include zen-rtl($rtl-selector) {\n      clear: zen-direction-switch($clear);\n    }\n  }\n}\n\n// zen-apply-gutter-padding()\n//\n// Applies the gutter to a grid item when using the padding gutter method.\n//\n// Common usage:\n// ```\n// @include zen-apply-gutter-padding();\n// ```\n//\n// $gutters           = $zen-gutters - The width of the gutters. See the docs for [`$zen-gutters`](section-grids.html#kssref-grids-variables-zen-gutters).\n// $direction         = $zen-direction - The floating direction to use. See the docs for [`$zen-direction`](section-grids.html#kssref-grids-variables-rtl-zen-direction).\n// $switch-direction  = $zen-switch-direction - Whether to switch the default direction. See the docs for [`$zen-switch-direction`](section-grids.html#kssref-grids-variables-rtl-zen-switch-direction).\n// $rtl-selector      = $zen-rtl-selector - The RTL selector. See the docs for [`$zen-rtl-selector`](section-grids.html#kssref-grids-variables-rtl-zen-rtl-selector).\n//\n// weight: 30\n//\n// Style guide: grids.zen-apply-gutter-padding\n@mixin zen-apply-gutter-padding(\n  $gutters            : $zen-gutters,\n  $direction          : $zen-direction,\n  $switch-direction   : $zen-switch-direction,\n  $rtl-selector       : $zen-rtl-selector\n) {\n\n  $dir: $direction;\n  @if $switch-direction {\n    $dir: zen-direction-switch($dir);\n  }\n\n  padding: {\n    left: zen-half-gutter($gutters, left, $dir);\n    right: zen-half-gutter($gutters, right, $dir);\n  }\n\n  // If $gutters is an odd number of pixels, we need special RTL handling.\n  @if zen-half-gutter($gutters, left, $dir) != zen-half-gutter($gutters, right, $dir) {\n    @include zen-rtl($rtl-selector) {\n      padding: {\n        left: zen-half-gutter($gutters, right, $dir);\n        right: zen-half-gutter($gutters, left, $dir);\n      }\n    }\n  }\n}\n","// Responsive 3-column grid\n//\n// The `.layout-3col` layout is a responsive grid layout that is:\n// - 1 column at mobile sizes\n// - 2 columns at tablet sizes\n// - 3 columns at desktop sizes\n//\n// The `.layout-3col` class is used on the container div for the layout. A *grid\n// item* in the container can be created using one of the following classes:\n//\n// - `.layout-3col__full` : 3-column wide grid item; starts a new row\n// - `.layout-3col__left-content` : 2-column wide grid item, spanning columns 1\n//   and 2; starts a new row\n// - `.layout-3col__right-content` : 2-column wide grid item, spanning columns 2\n//   and 3; starts a new row\n// - `.layout-3col__left-sidebar` : 1-column wide grid item spanning column 1;\n//   starts a new row on tablet screens\n// - `.layout-3col__first-left-sidebar` : 1-column wide grid item spanning column 1;\n//   spans column 1 and starts a new row on tablet screens only\n// - `.layout-3col__second-left-sidebar` : 1-column wide grid item spanning column 1;\n//   spans column 2 on tablet screens only\n// - `.layout-3col__right-sidebar` : 1-column wide grid item spanning column 3;\n//   starts a new row on tablet screens\n// - `.layout-3col__col-1` : 1-column wide grid item spanning column 1; starts a\n//   new row\n// - `.layout-3col__col-2` : 1-column wide grid item spanning column 2\n// - `.layout-3col__col-3` : 1-column wide grid item spanning column 3; starts a\n//   new row on tablet screens\n// - `.layout-3col__col-4` : At tablet sizes, the `__col-x` grid items will form\n//   an irregular layout of 2 items in the first row and 1 item in the second\n//   row. The `__col-4` is a \"hidden\" item that does not appear on the\n//   large-screen 3-column grid, but is a 1-column wide grid item spanning\n//   column 2 on tablet screens.\n// - `.layout-3col__col-x` : 1-column wide grid item spanning column 1; when\n//   several of these are used inside a `.layout-3col__grid-item-container` or\n//   `.layout-3col`, the first one is positioned like `__col-1`, the\n//   second like `__col-2`, etc.\n//\n// There are 2 ways to do a nested grid:\n// 1. Place a grid container div inside a grid item. Just apply the normal\n//    classes to the nested grid container and its grid items.\n// 2. The grid item's div is also the grid container for the nested grid. In\n//    this case, the `.layout3-col__grid-item-container` class should be added\n//    to the div to ensure its nested grid items align with the parent grid.\n//\n// Markup: layout-3col.twig\n//\n// Style guide: layouts.layout-3col\n\n.layout-3col,\n%layout-3col {\n  // We set the context to flow, so that this container can be used in most\n  // places in the HTML, i.e. it must be nested inside something that has\n  // padding.\n  @include zen-grid-container($context: flow);\n\n  &__full,\n  &__left-content,\n  &__right-content,\n  &__left-sidebar,\n  &__right-sidebar,\n  &__first-left-sidebar,\n  &__second-left-sidebar,\n  &__col-1,\n  &__col-2,\n  &__col-3,\n  &__col-4,\n  &__col-x {\n    @include zen-new-row(both);\n    @include zen-grid-item-base();\n    @include zen-grid-item(1, 1);\n  }\n\n  @include zen-respond-to(m) {\n    // Since our container's context is \"flow\" and we changed the gutter size,\n    // we need to re-apply the container's negative left/right margins.\n    @include zen-grid-container($context: flow);\n\n    &__full,\n    &__left-content,\n    &__right-content,\n    &__left-sidebar,\n    &__right-sidebar {\n      @include zen-grid-item(2, 1);\n      // Since we changed the gutter size for this media query, we need to\n      // re-apply the padding to every grid item.\n      @include zen-apply-gutter-padding();\n    }\n\n    &__first-left-sidebar,\n    &__col-1,\n    &__col-3,\n    &__col-x:nth-child(2n + 1) {\n      @include zen-grid-item(1, 1);\n      @include zen-apply-gutter-padding();\n    }\n\n    &__second-left-sidebar,\n    &__col-2,\n    &__col-4,\n    &__col-x:nth-child(2n) {\n      // Since this inherits from the mobile layout, we have to explicitly turn\n      // off the new-row mixin.\n      @include zen-new-row(none);\n      @include zen-grid-item(1, 2);\n      @include zen-apply-gutter-padding();\n    }\n\n  }\n\n  @include zen-respond-to(xl) {\n    &__full {\n      @include zen-grid-item(3, 1);\n    }\n\n    &__left-content {\n      @include zen-grid-item(2, 1);\n    }\n\n    &__right-content {\n      @include zen-grid-item(2, 2);\n    }\n\n    &__left-sidebar,\n    &__first-left-sidebar,\n    &__second-left-sidebar {\n      @include zen-new-row(right);\n      @include zen-grid-item(1, 3, right);\n    }\n\n    &__right-sidebar {\n      @include zen-new-row(right);\n      @include zen-grid-item(1, 1, right);\n    }\n\n    &__col-1,\n    &__col-x:nth-child(3n+1) {\n      @include zen-new-row(both);\n      @include zen-grid-item(1, 1);\n    }\n\n    &__col-2,\n    &__col-x:nth-child(3n+2) {\n      @include zen-new-row(none);\n      @include zen-grid-item(1, 2);\n    }\n\n    &__col-3,\n    &__col-x:nth-child(3n) {\n      @include zen-new-row(none);\n      @include zen-grid-item(1, 3);\n    }\n\n    &__col-4 {\n      display: none;\n    }\n\n  }\n\n  // Place last so it can override the padding of grid items.\n  &__grid-item-container {\n    @include zen-grid-container($context: grid-item);\n  }\n}\n","// Helper functions module\n//\n// Helper functions for the Zen Grids mixins.\n//\n// This module contains many Sass functions that you may find useful in your style sheet. These functions are also used internally by all of the mixins in Zen Grids.\n//\n// Weight: 10\n//\n// Style guide: functions\n\n\n@import \"./variables\";\n\n\n// zen-half-gutter()\n//\n// Returns a half gutter width.\n//\n// If the gutter width is in pixels and is an odd number, then `$gutter-side: left` will return half of the gutter rounded down to a whole pixel; `$gutter-side: right` will return half of the gutter rounded up to a whole pixel. The `$gutter-side` defaults to [`$zen-direction`](#zen-direction).\n//\n// Common usage:\n// ```\n// .ex {\n//   property: zen-half-gutter();\n//   // or:\n//   property: zen-half-gutter($gutter-side: [left or right]);\n// }\n// ```\n//\n// $gutters     = $zen-gutters - The width of the gutters. See the docs for [`$zen-gutters`](section-grids.html#kssref-grids-variables-zen-gutters).\n// $gutter-side = $zen-direction - The side of the grid item the gutter is needed for.\n// $direction   = $zen-direction - The direction to use. See the docs for [`$zen-direction`](section-grids.html#kssref-grids-variables-rtl-zen-direction).\n//\n// weight: -1\n//\n// Style guide: functions.zen-half-gutter\n@function zen-half-gutter(\n  $gutters          : $zen-gutters,\n  $gutter-side      : $zen-direction,\n  $direction        : $zen-direction\n) {\n  $half-gutter: $gutters / 2;\n  // Special handling in case gutter has an odd number of pixels.\n  @if unit($gutters) == \"px\" {\n    @if $gutter-side == $direction {\n      @return floor($half-gutter);\n    }\n    @else {\n      @return ceil($half-gutter);\n    }\n  }\n  @return $half-gutter;\n}\n\n// zen-compare-units()\n//\n// Internal function. Warns if the gutter and grid width units are not comparable. It does not throw an `@error` because the line following the call to `zen-compare-units()` will cause a Sass math error with the a line number that is more useful than if it were to fail here.\n//\n// No style guide\n@function zen-compare-units(\n  $feature,\n  $gutters        : $zen-gutters,\n  $grid-width     : $zen-grid-width\n) {\n  @if not comparable($gutters, $grid-width) {\n    $units-gutter: unit($gutters);\n    $units-grid: unit($grid-width);\n    @warn \"The layout cannot be calculated correctly; when using #{$feature}, the units of the gutter (#{$units-gutter} must match the units of the grid width (#{$units-grid}).\";\n    @return false;\n  }\n  @return true;\n}\n\n// zen-unit-width()\n//\n// Returns the unit width of a single column in the grid.\n//\n// Common usage:\n// ```\n// .ex {\n//   property: zen-unit-width();\n// }\n// ```\n//\n// $columns       = $zen-columns - The number of columns in the grid. See the docs for [`$zen-columns`](section-grids.html#kssref-grids-variables-zen-columns).\n// $gutters       = $zen-gutters - The width of the gutters. See the docs for [`$zen-gutters`](section-grids.html#kssref-grids-variables-zen-gutters).\n// $gutter-method = $zen-gutter-method - The gutter method to use. See the docs for [`$zen-gutter-method`](section-grids.html#kssref-grids-variables-zen-gutter-method).\n// $grid-width    = $zen-grid-width - The width of the entire grid. See the docs for [`$zen-gutter-method`](section-grids.html#kssref-grids-variables-fixed-zen-grid-width).\n//\n// weight: -1\n//\n// Style guide: functions.zen-unit-width\n@function zen-unit-width(\n  $columns        : $zen-columns,\n  $gutters        : $zen-gutters,\n  $gutter-method  : $zen-gutter-method,\n  $grid-width     : $zen-grid-width\n) {\n  $unit-width: 0;\n  @if $gutter-method == margin {\n    $test: zen-compare-units('gutter-method: margin', $gutters, $grid-width);\n    $unit-width: ($grid-width - ($columns - 1) * $gutters) / $columns;\n  }\n  @else {\n    $unit-width: $grid-width / $columns;\n  }\n  @if unit($unit-width) == \"px\" and floor($unit-width) != ceil($unit-width) {\n    @if $gutter-method == margin {\n      $num_gutters: $columns - 1;\n      @warn \"You may experience rounding errors as the grid width, #{$grid-width}, does not divide evenly into #{$columns} columns with #{$num_gutters} of #{$gutters} gutters.\";\n    }\n    @else {\n      @warn \"You may experience rounding errors as the grid width, #{$grid-width}, does not divide evenly into #{$columns} columns.\";\n    }\n  }\n  @return $unit-width;\n}\n\n// zen-grid-item-width()\n//\n// Calculates the width of a grid item that spans the specified number of columns.\n//\n// Common usage:\n// ```\n// .ex {\n//   property: zen-grid-item-width([number]);\n// }\n// ```\n//\n// $column-span   - Required. The number of columns to calculate the width of.\n// $columns       = $zen-columns - The number of columns in the grid. See the docs for [`$zen-columns`](section-grids.html#kssref-grids-variables-zen-columns).\n// $gutters       = $zen-gutters - The width of the gutters. See the docs for [`$zen-gutters`](section-grids.html#kssref-grids-variables-zen-gutters).\n// $gutter-method = $zen-gutter-method - The gutter method to use. See the docs for [`$zen-gutter-method`](section-grids.html#kssref-grids-variables-zen-gutter-method).\n// $grid-width    = $zen-grid-width - The width of the entire grid. See the docs for [`$zen-gutter-method`](section-grids.html#kssref-grids-variables-fixed-zen-grid-width).\n// $box-sizing    = $zen-box-sizing - The box sizing to use. See the docs for [`$zen-box-sizing`](section-grids.html#kssref-grids-variables-zen-box-sizing).\n//\n// Style guide: functions.zen-grid-item-width\n@function zen-grid-item-width(\n  $column-span,\n  $columns        : $zen-columns,\n  $gutters        : $zen-gutters,\n  $gutter-method  : $zen-gutter-method,\n  $grid-width     : $zen-grid-width,\n  $box-sizing     : $zen-box-sizing\n) {\n  $width: $column-span * zen-unit-width($columns, $gutters, $gutter-method, $grid-width);\n\n  // Add the margin gutters internal to the spanning grid item.\n  @if $gutter-method == margin {\n    $width: $width + (floor($column-span) - 1) * $gutters;\n  }\n  // For the original box model, remove the padding from the width.\n  @else if $box-sizing == content-box {\n    $test: zen-compare-units('box-sizing: content-box', $gutters, $grid-width);\n    $width: $width - $gutters;\n  }\n  @return $width;\n}\n\n// zen-direction-switch()\n//\n// Returns the opposite direction, given \"left\" or \"right\".\n//\n// Common usage:\n// ```\n// .ex {\n//   property: zen-direction-switch([left or right]);\n// }\n// ```\n//\n// $direction - Required. The direction you want to switch.\n//\n// weight: 1\n//\n// Style guide: functions.zen-direction-switch\n@function zen-direction-switch(\n  $direction\n) {\n  @if $direction == left {\n    @return right;\n  }\n  @else if $direction == right {\n    @return left;\n  }\n  @else if $direction != none and $direction != both {\n    @warn \"Invalid direction passed to zen-direction-switch().\";\n  }\n  @return $direction;\n}\n\n// zen-support-for-ie()\n//\n// Internal function. If you've installed support-for, this function will tell you if IE 6 or IE 7 should be supported. If support-for is not installed, this function always returns false.\n//\n// No style guide\n@function zen-support-for-ie($min-version) {\n  @if function-exists('support-for') {\n    @return support-for(ie, $min-version);\n  }\n  @else {\n    @return false;\n  }\n}\n","// Dependencies.\n// Allow layout-center's margin/padding to override layout-3col.\n@import 'layouts/layout-3col/layout-3col';\n\n// Layout Center\n//\n// All other layouts should be nested inside this centered layout to ensure that\n// content does not get too wide on very large screens.\n//\n// Applying a `.layout-*` class to the same HTML element as `.layout-center`\n// would cause that element's grid to mis-align with the rest of the grid on the\n// page, but this component will automatically detect the other `.layout-*`\n// class and automatically use the `.layout-center--shared-grid` variant\n// instead.\n//\n// .layout-center--shared-grid - If `.layout-center` is applied to the same div\n//   as another .layout-* class, then this variant should be used to prevent the\n//   shared layout's grid from mis-aligning. Note: Each time a new .layout-*\n//   component is created, this component will need to be modified.\n//\n// Markup: layout-center.twig\n//\n// Weight: -1\n//\n// Style guide: layouts.layout-center\n\n.layout-center,\n%layout-center {\n  @include zen-apply-gutter-padding();\n  margin: 0 auto;\n\n  // We wrap the max-width declaration with zen-layout() so we can see the value\n  // of $zen-gutters when it is at the larger \"xl\"-sized media query.\n  @include zen-layout(xl) {\n    // The max content width is 1140px (the container width minus the gutters.)\n    max-width: 1140px + $zen-gutters;\n  }\n\n  @include zen-respond-to(m) {\n    // Since we are using zen-respond-to(), the values in $zen-layouts will\n    // override the global value for $zen-gutters.\n    @include zen-apply-gutter-padding();\n  }\n\n  // Since .layout-center has overridden the negative margin on another\n  // .layout-* container, the grid children will be misaligned due to\n  // .layout-center's gutter padding. So we remove it.\n  &--shared-grid {\n    padding-left: 0;\n    padding-right: 0;\n  }\n}\n\n//\n// Fugly selectors.\n//\n\n.layout-center {\n  // Ensure the .layout-center--shared-grid variant is automatically used by\n  // adding all other .layout-* classes here.\n  &.layout-3col {\n    @extend %layout-center--shared-grid;\n  }\n}\n","// The height of the navigation container.\n$layout-swap-height: 1 * $base-line-height;\n\n// Layout swap\n//\n// Uses absolute positioning and selective padding to make 2 elements appear to\n// swap places in the visual order while maintaining their original HTML source\n// order.\n//\n// Markup: layout-swap.twig\n//\n// Style guide: layouts.layout-swap\n\n.layout-swap,\n%layout-swap {\n  position: relative;\n\n  @include respond-to(xs) {\n    // Move all the children down to make room for the \"top\" element.\n    padding-top: $layout-swap-height;\n  }\n\n  &__top {\n    @include respond-to(xs) {\n      position: absolute;\n      top: 0;\n      height: $layout-swap-height;\n      width: 100%;\n    }\n  }\n}\n","// Layout Front\n//\n// This layout is specifically for use\n// with the home page.\n//\n// Markup: layout-front.twig\n//\n// Weight: -3\n//\n// Style guide: layouts.layout-front\n\n.layout-3col {\n  @include zen-grid-container($context: flow);\n\n  .front-slider,\n  .layout-front-side-main__layout {\n    @include zen-grid-item(1, 1);\n  }\n\n  .welcome,\n  .layout-front-side-first__layout {\n    @include zen-new-row(left);\n    @include zen-grid-item(1, 1);\n    box-sizing: border-box;\n    padding: 5px;\n    text-align: center;\n  }\n\n  .front-search,\n  .layout-front-side-second__layout {\n    @include zen-new-row(left);\n    @include zen-grid-item(1, 1);\n    box-sizing: border-box;\n    padding: 5px;\n  }\n\n  .submit-collection,\n  .submit-collection-anon,\n  .layout-front-side-third__layout {\n    @include zen-new-row();\n    @include zen-grid-item(1, 1);\n    box-sizing: border-box;\n    padding: 5px;\n  }\n\n  .front-bottom,\n  .layout-front-bottom__layout {\n    @include zen-new-row();\n    @include zen-grid-item(1, 1);\n    box-sizing: border-box;\n    padding: 5px;\n  }\n\n  @include zen-respond-to(m) {\n    .front-slider,\n    .layout-front-side-main__layout {\n      @include zen-grid-item(2, 1);\n    }\n\n    .welcome,\n    .layout-front-side-first__layout {\n      @include zen-new-row(left);\n      @include zen-grid-item(2, 1);\n      box-sizing: border-box;\n      padding: 5px;\n    }\n\n    .front-search,\n    .layout-front-side-second__layout {\n      @include zen-new-row(left);\n      @include zen-grid-item(1, 2);\n      box-sizing: border-box;\n      padding: 5px;\n\n      .block-inner-wrapper {\n        min-height: 90px;\n      }\n    }\n\n    .submit-collection,\n    .submit-collection-anon,\n    .layout-front-side-third__layout {\n      @include zen-grid-item(1, 1);\n      box-sizing: border-box;\n      padding: 5px;\n      clear: none;\n    }\n\n    .front-bottom,\n    .layout-front-bottom__layout {\n      @include zen-new-row();\n      @include zen-grid-item(2, 1);\n      box-sizing: border-box;\n      padding: 5px;\n    }\n  }\n\n\n  @include zen-respond-to(xl) {\n    .front-slider,\n    .layout-front-side-main__layout {\n      @include zen-grid-item(2, 1);\n      box-sizing: border-box;\n      padding: 5px;\n    }\n\n    .welcome,\n    .layout-front-side-first__layout {\n      @include zen-new-row(right);\n      @include zen-grid-item(1, 1, right);\n      box-sizing: border-box;\n      padding: 5px;\n      text-align: center;\n\n      .block-inner-wrapper {\n        max-height: 19.5em;\n        min-height: 19.5em;\n      }\n    }\n\n    .front-search,\n    .layout-front-side-second__layout {\n      @include zen-new-row(right);\n      @include zen-grid-item(1, 1, right);\n      box-sizing: border-box;\n      padding: 5px;\n    }\n\n    .submit-collection,\n    .submit-collection-anon,\n    .layout-front-side-third__layout {\n      @include zen-new-row(right);\n      @include zen-grid-item(1, 1, right);\n      box-sizing: border-box;\n      padding: 5px;\n    }\n\n    .front-bottom,\n    .layout-front-bottom__layout {\n      @include zen-new-row(both);\n      @include zen-grid-item(3, 1);\n      box-sizing: border-box;\n      padding: 5px;\n    }\n  }\n}\n\n.region-sub-content {\n  text-align: center;\n}\n\n.navigation-region-wrapper {\n  display: table;\n  width: 100%;\n  background-color: white;\n}\n\n.view-gallery {\n  .desc-field {\n    display: none !important;\n  }\n}\n\n  .inner-nav {\n    #block-views-gallery-block-1 {\n      width: 100%;\n      display: block;\n      vertical-align: middle;\n      border-right: 1px solid #ccc;\n      border-left: 1px solid #ccc;\n    }\n\n    #block-views-notices-block {\n      width: 100%;\n      display: block;\n      vertical-align: middle;\n      border-right: 1px solid #ccc;\n      border-left: 1px solid #ccc;\n\n      .flex-direction-nav a.flex-next::before {\n        @extend %font-aw-icon;\n        font-size: 100%;\n        display: block;\n        opacity: 1;\n        content: '\\f0d8';\n      }\n\n      .flex-direction-nav a {\n        display: block;\n        opacity: 1;\n        width: 20px;\n        height: 20px;\n      }\n\n      .flex-direction-nav a.flex-prev::before {\n        @extend %font-aw-icon;\n        font-size: 100%;\n        content: '\\f0d7';\n      }\n\n      .flex-direction-nav a.flex-prev {\n        right: 10px;\n        text-align: right;\n        left: auto;\n        top: 80%;\n\n        &:hover {\n          right: 10px;\n        }\n      }\n\n      .field-content {\n        p {\n          margin-top: 0;\n          margin-bottom: 0;\n        }\n      }\n    }\n  }\n\n.view-gallery {\n  .flex-next {\n    right: 10%;\n  }\n}\n\n.flexslider:hover .flex-direction-nav .flex-next {\n  right: 10%;\n}\n\n@include zen-respond-to(m) {\n  .front__slider .owl-item > div .info-content-wrapper,\n  .front-slider .owl-item > div .info-content-wrapper,\n  #flex-gallery .info-content-wrapper {\n    max-width: 50% !important;\n  }\n\n  .view-gallery {\n    .flex-next {\n      right: 48%;\n    }\n  }\n\n  .view-gallery {\n    .flexslider:hover .flex-direction-nav .flex-next {\n      right: 48%;\n    }\n  }\n\n  .view-gallery {\n     .desc-field {\n      display: block !important;\n    }\n  }\n\n  .inner-nav {\n    #block-views-gallery-block-1 {\n      width: 30%;\n      display: inline-block;\n      vertical-align: middle;\n      border-right: 1px solid #ccc;\n      border-left: 1px solid #ccc;\n    }\n\n    #flex-gallery .flex-direction-nav .flex-next {\n      right: 48% !important;\n    }\n\n    #block-views-notices-block {\n      width: 68%;\n      display: inline-block;\n      vertical-align: middle;\n      border-right: 1px solid #ccc;\n      border-left: 0;\n\n      .flex-direction-nav a.flex-next::before {\n        font-size: 100%;\n        display: block;\n        opacity: 1;\n      }\n\n      .flex-direction-nav a {\n        display: block;\n        opacity: 1;\n        width: 20px;\n        height: 20px;\n      }\n\n      .flex-next {\n        opacity: 1;\n        padding-top: 20px;\n/*         right: 48%; */\n        height: 50px;\n      }\n\n      .flex-prev {\n        left: 10% !important;\n        opacity: 1;\n        height: 50px;\n        padding-top: 20px;\n      }\n\n      .flex-direction-nav a.flex-prev::before {\n        font-size: 100%;\n      }\n\n      .flex-direction-nav a.flex-prev {\n        right: 10px;\n        text-align: right;\n        left: auto;\n        top: 80%;\n\n        &:hover {\n          right: 10px;\n        }\n      }\n\n      .field-content {\n\n        p {\n          margin-top: 0;\n          margin-bottom: 0;\n        }\n      }\n    }\n  }\n}\n","// Autocomplete field\n//\n// As the user starts to type a value, a selection list appears below the form\n// item allowing them to choose an option.\n//\n// .is-throbbing - Waiting for search result.\n//\n// Markup: autocomplete.twig\n//\n// Style guide: forms.autocomplete\n\n\n// Animated throbber\n.autocomplete,\n%autocomplete {\n  background-image: image-url('autocomplete/throbber-inactive.png');\n  background-position: 100% center;\n  background-repeat: no-repeat;\n\n  @include rtl() {\n    background-position: 0% center;\n  }\n\n  // Suggestion list.\n  &__list-wrapper {\n    border: 1px solid;\n    overflow: hidden;\n    position: absolute;\n    z-index: 100;\n  }\n\n  &__list {\n    list-style: none;\n    list-style-image: none;\n    margin: 0;\n    padding: 0;\n  }\n\n  &__list-item {\n    background: color(autocomplete-bg);\n    color: color(autocomplete);\n    cursor: default;\n    white-space: pre;\n\n    &.is-selected,\n    &--is-selected {\n      background: color(autocomplete-select-bg);\n      color: color(autocomplete-select);\n    }\n  }\n\n  &.is-throbbing,\n  &--is-throbbing {\n    background-image: image-url('autocomplete/throbber-active.gif');\n  }\n}\n\n//\n// Drupal selectors.\n//\n\n.form-autocomplete {\n  @extend %autocomplete;\n\n  &.throbbing {\n    @extend %autocomplete--is-throbbing;\n  }\n}\n\n// sass-lint:disable no-ids\n#autocomplete {\n  @extend %autocomplete__list-wrapper;\n\n  ul {\n    @extend %autocomplete__list;\n  }\n\n  li {\n    @extend %autocomplete__list-item;\n  }\n\n  .selected {\n    @extend %autocomplete__list-item--is-selected;\n  }\n}\n","// The relative path from the css directory to the sass directory.\n$image-url-path-to-source: '../sass' !default;\n// The relative path from the root sass directory to where your components usually lie.\n$image-url-path-to-components: 'components' !default;\n\n// image-url()\n//\n// If you include your images next to your component Sass files, you need to\n// specify a url() to point from the generated CSS to the Sass source like this:\n//\n// ```css\n// content: url(../sass/components/is-quite/long.svg);\n// ```\n//\n// With the `image-url()` function the path to all your components is assumed to\n// start with `../sass/components/` and you just need to give it the last, short\n// bit of the path in your Sass code like this:\n//\n// ```scss\n// content: image-url(is-quite/short.svg);\n// ```\n//\n// If you want to point at an image that is not in the components sub-directory\n// of your sass directory, you can override the default $path-to-components by\n// passing it in as the first parameter of `image-url()` like this:\n//\n// ```scss\n// content: image-url(base, grouping/blockquote.svg);\n// ```\n//\n// which would output `url(../sass/base/grouping/blockquote.svg)`.\n//\n// $path-to-components - Optional. The relative path from the root sass\n//                       directory to where your components usually lie.\n//                       Defaults to `$image-url-path-to-components`.\n// $path               - Required. The path to the image relative to the\n//                       components directory.\n// $path-to-source     - Optional. The relative path from the css directory to\n//                       the sass directory. Defaults to\n//                       `$image-url-path-to-source`.\n//\n// Style guide: sass.mixins.image-url\n@function image-url($path-to-components, $path: null, $path-to-source: $image-url-path-to-source) {\n  // If only 1 parameter is given, its value is intended for the $path.\n  @if type-of($path) == 'null' {\n    $path: $path-to-components;\n    $path-to-components: $image-url-path-to-components;\n  }\n  @return url(unquote($path-to-source + '/' + $path-to-components + '/' + $path));\n}\n","// Box\n//\n// A simple box style.\n//\n// A Drupal block is often styled as a box. However, this design component is\n// not applied to any blocks by default; it is used as an example of how to\n// build and document a CSS component.\n//\n// \"box\" is the name of our component, so we define a `.box` class that we can\n// apply to any HTML element that needs the box styling. We also provide a\n// `%box` placeholder selector so that we can easily extend the basic box\n// component with `@extend %box;`.\n//\n// Take a look at the source code for this component for more information about\n// building a good component.\n//\n// :hover - The hover/focus styling.\n// .box--highlight - The \"highlight\" box variant.\n//\n// Markup: box.twig\n//\n// Style guide: components.box\n\n.box,\n%box {\n  @include margin-bottom(1);\n  border: 5px solid color(border);\n  padding: 1em;\n\n  // Sass compiles this to the selector: .box__title, %box__title {}\n  // The \"__\" (double underscore) is part of a BEM naming convention that\n  // indicates the \"title\" is an _element_ of (a piece of) the \"box\" component.\n  &__title {\n    margin: 0;\n  }\n\n  // Sass compiles this nested ruleset's selector into:\n  // .box:focus, .box:hover, .box.is-focus, .box--is-focus,\n  // %box:focus, %box:hover, %box.is-focus, %box--is-focus {}\n  //\n  // The \".box--is-focus\" class is a stray class we don't actually want, but we\n  // deal with it because we often want a placeholder selector like\n  // %box--is-focus in case we need to use @extends later.\n  //\n  // The \".is-\" part of the class name is a Drupal 8 BEM naming convention that\n  // indicates the \"focus\" is a _state_ of the \"box\" component.\n  &:focus,\n  &:hover,\n  &.is-focus,\n  &--is-focus {\n    border-color: color(text);\n  }\n\n  // Sass compiles this to the selector: .box--highlight, %box--highlight {}\n  // The \"--\" (double dash) is part of a BEM naming convention that indicates\n  // the \"highlight\" is a _modifier_, creating a new variation of the standard\n  // \"box\" component.\n  &--highlight {\n    border-color: color(link);\n  }\n}\n\n//\n// Drupal selectors.\n//\n// In this part of the file, we write some fugly selectors if we can't figure\n// out how to insert the class we want (.box) into the Drupal theme system. Then\n// we @extend from the fugly selector into the nicely-written component\n// selector.\n//\n\n// You could create a theme hook suggestion and override the block.tpl.php just\n// for the sidebar regions or write a HOOK_preprocess_block() function to check\n// for the regions and insert the classes into the right variables, or, if you\n// have no idea what I'm talking about, you could just use this fugly CSS\n// selector:\n//\n// [class$=\"sidebar\"] {\n//   .block {\n//     @extend %box;\n//   }\n//\n//   .block__title {\n//     @extend %box__title;\n//   }\n// }\n","// sass-lint:disable no-important\n\n// visually-hidden()\n//\n// Make an element visually hidden, but accessible to screen readers, etc.\n// @see http://snook.ca/archives/html_and_css/hiding-content-for-accessibility\n//\n// Style guide: sass.mixins.visually-hidden\n@mixin visually-hidden {\n  position: absolute !important;\n  height: 1px;\n  width: 1px;\n  overflow: hidden;\n  clip: rect(1px, 1px, 1px, 1px);\n  word-wrap: normal;\n}\n\n// visually-hidden--off()\n//\n// Turns off the visually-hidden effect.\n//\n// Style guide: sass.mixins.visually-hidden--off\n@mixin visually-hidden--off {\n  position: static !important;\n  clip: auto;\n  height: auto;\n  width: auto;\n  overflow: visible;\n}\n\n// visually-hidden--focusable()\n//\n// Makes an element visually hidden by default, but visible when receiving\n// focus.\n//\n// Style guide: sass.mixins.visually-hidden--focusable\n@mixin visually-hidden--focusable {\n  @include visually-hidden;\n\n  &:active,\n  &:focus {\n    @include visually-hidden--off;\n  }\n}\n","// Visually hidden\n//\n// Make an element visually hidden, but accessible to screen readers, etc.\n//\n// .visually-hidden--off        - Turns off the visually-hidden effect.\n// .visually-hidden--focusable  - Makes an element visually hidden by default,\n//                                but visible when receiving focus.\n// .visually-hidden--focusable:focus  - A focused, and visible, element.\n//\n// Markup: visually-hidden.twig\n//\n// Style guide: components.visually-hidden\n\n.visually-hidden,\n%visually-hidden {\n  @include visually-hidden();\n\n  &--off {\n    @include visually-hidden--off();\n  }\n\n  &--focusable {\n    @extend %visually-hidden;\n\n    &:active,\n    &:focus {\n      @extend %visually-hidden--off;\n    }\n  }\n}\n\n//\n// Drupal selectors.\n//\n\n.element-invisible {\n  @extend %visually-hidden;\n}\n\n.element-focusable {\n  @extend %visually-hidden--focusable;\n}\n","// Dependencies.\n@import 'components/visually-hidden/visually-hidden';\n\n// Breadcrumb navigation\n//\n// The path to the current page in the form of a list of links.\n// \n// Markup: breadcrumb.twig\n//\n// Style guide: components.breadcrumb\n\n.bread-wrapper {\n  display: table;\n  width: 100%;\n  background-color: color(white);\n}\n\n.breadcrumb,\n%breadcrumb {\n  margin: 7px;\n  margin-left: 0;\n  font-size: 85%;\n\n  @media print {\n    display: none;\n  }\n\n  &__title {\n    @extend %visually-hidden;\n  }\n\n  &__list {\n    margin: 0;\n    padding: 0;\n  }\n\n  &__item {\n    display: inline;\n    list-style-type: none;\n    margin: 0;\n    padding: 5px;\n    padding-left: 0;\n    border-radius: 3px;\n\n    &:hover {\n      background-color: color(white);\n    }\n\n    a {\n      margin: 5px;\n      margin-left: 0;\n      text-decoration: none;\n      color: color(deep-red);\n\n      &:hover {\n        color: color(teil);\n      }\n    }\n  }\n}\n","// clearfix()\n//\n// Allows the bottom of an element to extend to the bottom of all floated\n// children elements. @see http://nicolasgallagher.com/micro-clearfix-hack/\n//\n// We use the micro-clearfix, optimized for use in `@extend` where fewer `&` is\n// better.\n//\n// Style guide: sass.mixins.clearfix\n@mixin clearfix() {\n  &::before {\n    content: '';\n    display: table;\n  }\n\n  &::after {\n    content: '';\n    display: table;\n    clear: both;\n  }\n}\n","// Collapsible fieldset\n//\n// Fieldsets with optional entry fields can be hidden with collapsed fieldsets.\n//\n// .is-collapsed - The collapsed fieldset.\n//\n// Markup: collapsible-fieldset.twig\n//\n// Style guide: forms.collapsible-fieldset\n\n.collapsible-fieldset,\n%collapsible-fieldset {\n  position: relative;\n\n  &__legend {\n    display: block;\n    padding-left: 15px;\n    background-image: image-url('collapsible-fieldset/expanded.svg');\n    background-position: 4px 50%;\n    background-repeat: no-repeat;\n\n    @include rtl() {\n      padding-left: 0;\n      padding-right: 15px;\n      background-position: right 4px top 50%;\n    }\n  }\n\n  &__summary {\n    color: color(fieldset-summary);\n    font-size: .9em;\n    margin-left: .5em;\n  }\n\n  &.is-collapsed,\n  &--is-collapsed {\n    border-bottom-width: 0;\n    border-left-width: 0;\n    border-right-width: 0;\n    height: 1em;\n  }\n\n  &.is-collapsed &__wrapper,\n  &--is-collapsed__wrapper {\n    display: none;\n  }\n\n  &.is-collapsed &__legend,\n  &--is-collapsed__legend {\n    background-image: image-url('collapsible-fieldset/collapsed.svg');\n    background-position: 4px 50%;\n\n    @include rtl() {\n      background-image: image-url('collapsible-fieldset/collapsed-rtl.svg');\n      background-position: right 4px top 50%;\n    }\n  }\n}\n\n//\n// Drupal selectors.\n//\n\n.collapsible {\n  @extend %collapsible-fieldset;\n\n  .fieldset-legend {\n    @extend %collapsible-fieldset__legend;\n\n    .summary {\n      @extend %collapsible-fieldset__summary;\n    }\n  }\n\n  &.collapsed {\n    @extend %collapsible-fieldset--is-collapsed;\n\n    .fieldset-legend {\n      @extend %collapsible-fieldset--is-collapsed__legend;\n    }\n\n    .fieldset-wrapper {\n      @extend %collapsible-fieldset--is-collapsed__wrapper;\n    }\n  }\n}\n","// Comment\n//\n// A single comment in a thread of comments.\n//\n// .comment--preview - Preview version of comment.\n// .comment--nested - A nested comment.\n//\n// Markup: comment.twig\n//\n// Style guide: components.comments\n\n// Wrapper for a single comment.\n.comment,\n%comment {\n\n  // Wrapper for the list of comments and its title.\n  &__section {\n    @include margin(1 0);\n  }\n\n  &__title {\n    margin: 0;\n  }\n\n  // Comment's permalink wrapper.\n  &__permalink {\n    text-transform: uppercase;\n    font-size: 75%;\n  }\n\n  // Preview of the comment before submitting new or updated comment.\n  &--preview {\n    background-color: color(preview-bg);\n  }\n\n  // Nested comments are indented.\n  &--nested {\n    // Drupal core uses a 25px left margin.\n    margin-left: $indent-amount;\n\n    @include rtl() {\n      margin-left: 0;\n      margin-right: $indent-amount;\n    }\n  }\n}\n\n//\n// Drupal selectors.\n//\n\n.comments {\n  @extend %comment__section;\n}\n\n.comment-preview {\n  @extend %comment--preview;\n}\n\n.indented {\n  @extend %comment--nested;\n}\n","// Dependencies.\n@import 'components/clearfix/clearfix';\n\n// Form item\n//\n// Wrapper for a form element (or group of form elements) and its label.\n//\n// .form-item--inline - Inline form items.\n// .form-item--tight  - Packs groups of form items closer together.\n// .is-error          - Highlight the form elements that caused a form\n//                      submission error.\n//\n// Markup: form-item.twig\n//\n// Style guide: forms.form-item\n\n// Form item (radio)\n//\n// Checkboxes and radios require slightly different markup; their label is after\n// their widget instead of before. Uses the `.form-item--radio` class variant of\n// the normal form item and is placed on each of the nested form items.\n//\n// .is-error - Highlight the form elements that caused a form submission error.\n//\n// Markup: form-item--radio.twig\n//\n// Style guide: forms.form-item--radio\n\n.form-item,\n%form-item {\n  @include margin(1 0);\n\n  // The part of the label that indicates a required field.\n  &__required {\n    color: color(form-error);\n  }\n\n  // The descriptive help text (separate from the label).\n  &__description {\n    @include font-size(s);\n  }\n\n  &--inline {\n    div,\n    label {\n      display: inline;\n    }\n\n    // There's always an exception.\n    &__exception {\n      display: block;\n    }\n  }\n\n  &--tight {\n    margin: 0;\n  }\n\n  &--radio {\n    @extend %form-item--tight;\n  }\n\n  &--radio &__label,\n  &--radio__label {\n    display: inline;\n    font-weight: normal;\n  }\n\n  &--radio &__description,\n  &--radio__description {\n    margin-left: 1.4em;\n  }\n\n  &.is-error &__widget,\n  &--is-error__widget {\n    border: 1px solid color(form-error);\n  }\n\n  &.is-error,\n  &--is-error {\n    input,\n    textarea,\n    select {\n      @extend %form-item--is-error__widget;\n    }\n  }\n}\n\n//\n// Drupal selectors.\n//\n\n.form-item {\n  input.error,\n  textarea.error,\n  select.error {\n    @extend %form-item--is-error__widget;\n  }\n\n  .description {\n    @extend %form-item__description;\n  }\n}\n\n.form-required {\n  @extend %form-item__required;\n}\n\n// Password confirmation.\n.password-parent,\n.confirm-parent {\n  @extend %form-item--tight;\n}\n\ntable {\n  .form-item {\n    @extend %form-item--tight;\n  }\n}\n\n.form-type-radio,\n.form-type-checkbox {\n  @extend %form-item--radio;\n\n  .description {\n    @extend %form-item--radio__description;\n  }\n}\n\nlabel.option {\n  @extend %form-item--radio__label;\n}\n\n.container-inline {\n  .form-item {\n    @extend %form-item--inline;\n  }\n\n  // Fieldset contents always need to be rendered as block.\n  .fieldset-wrapper {\n    @extend %form-item--inline__exception;\n  }\n}\n","// Drupal admin tables\n//\n// Complex forms that appear in html `<table>` elements.\n//\n// If your custom theme isn't used for Drupal's admin pages, you can safely\n// delete this component to save file weight in the generated CSS.\n//\n// Markup: form-table.twig\n//\n// Style guide: forms.form-table\n\n.form-table,\n%form-table {\n  &__sticky-header {\n    position: fixed;\n    visibility: hidden;\n    margin-top: 0;\n    background-color: color(body-bg);\n\n    &.is-sticky,\n    &--is-sticky {\n      visibility: visible;\n    }\n  }\n\n  &__header {\n    border-bottom: 3px solid color(border);\n    padding-right: 1em;\n    text-align: left;\n\n    @include rtl() {\n      text-align: right;\n      padding-left: 1em;\n      padding-right: 0;\n    }\n  }\n\n  &__body {\n    border-top: 1px solid color(border);\n  }\n\n  &__row {\n    padding: .1em .6em;\n    border-bottom: 1px solid color(border);\n    background-color: color(row-stripe);\n\n    &:nth-child(even) {\n      background-color: color(body-bg);\n    }\n\n    &.is-active,\n    &--is-active {\n      background-color: darken(color(row-stripe), 6.8%);\n    }\n\n    &.is-disabled,\n    &--is-disabled {\n      background: color(row-disabled);\n    }\n\n    &.is-selected,\n    &--is-selected {\n      background: color(table-select);\n    }\n  }\n\n  &__list {\n    margin: 0;\n  }\n\n  &__narrow-column {\n    // sass-lint:disable no-vendor-prefixes, no-duplicate-properties\n    width: -moz-min-content;\n    width: -webkit-min-content;\n    text-align: center;\n  }\n\n  // Automatically set styles on child HTML structure.\n  th {\n    @extend %form-table__header;\n\n    // Override specificity. :-p\n    &.form-table__narrow-column {\n      @extend %form-table__narrow-column;\n    }\n  }\n\n  tbody {\n    @extend %form-table__body;\n\n    tr {\n      @extend %form-table__row;\n    }\n  }\n\n  ul {\n    @extend %form-table__list;\n  }\n}\n\n//\n// Drupal selectors.\n//\n\n.sticky-header {\n  @extend %form-table__sticky-header;\n}\n\nform table {\n  @extend %form-table;\n}\n\ntd,\nth {\n  .checkbox {\n    @extend %form-table__narrow-column;\n  }\n}\n\n// Markup generated by theme_tablesort_indicator().\ntd.active {\n  @extend %form-table__row--is-active;\n}\n\ntd.menu-disabled {\n  @extend %form-table__row--is-disabled;\n}\n\n// TableSelect behavior.\ntr.selected td {\n  @extend %form-table__row--is-selected;\n}\n","// Dependencies.\n@import 'base/headings/headings';\n@import 'components/clearfix/clearfix';\n\n// Branding header\n//\n// Markup: header.twig\n//\n// Style guide: components.header\n\n.header__logo-image {\n  max-width: 120px;\n}\n\n.header,\n%header {\n  @extend %clearfix;\n  text-align: center;\n  background-color: color(white);\n\n  .header-main-menu {\n    .main-menu {\n      li {\n        display: inline-block;\n        float: none;\n        margin: 0 4%;\n        line-height: 100px;\n\n        a {\n          text-decoration: none;\n        }\n      }\n    }\n  }\n\n  // Wrapping link for logo.\n  &__logo {\n    float: none;\n    margin: 0 10px 0 0;\n    padding: 0;\n\n    @include rtl() {\n      float: right;\n      margin: 0 0 0 10px;\n    }\n  }\n\n  // Logo image.\n  &__logo-image {\n    vertical-align: bottom;\n    max-width: 120px;\n  }\n\n  // Wrapper for website name and slogan.\n  &__name-and-slogan {\n    float: none;\n    padding-bottom: 5px;\n  }\n\n  // The name of the website.\n  &__site-name {\n    @extend %h1;\n    margin: 0;\n    font-size: 1.5em;\n    line-height: 1.5em;\n    font-weight: normal;\n    color: #5a5b5d;\n\n    a:link,\n    a:visited {\n      color: #5a5b5d;\n      text-decoration: none;\n    }\n\n    a:hover,\n    a:focus {\n      text-decoration: underline;\n    }\n  }\n\n  // The link around the name of the website.\n  &__site-link {\n    &:link,\n    &:visited {\n      color: color(text);\n      text-decoration: none;\n    }\n\n    &:hover,\n    &:focus {\n      text-decoration: underline;\n    }\n  }\n\n  // The slogan (or tagline) of a website.\n  &__site-slogan {\n    margin: 0;\n    font-size: 1em;\n    color: #a14243;\n    font-weight: normal;\n  }\n\n  // The secondary menu (login, etc.)\n  &__secondary-menu {\n    float: right;\n\n    @include rtl() {\n      float: left;\n    }\n  }\n\n  // Wrapper for any blocks placed in the header region.\n  &__region {\n    // Clear the logo.\n    clear: both;\n    padding-bottom: 5px;\n    display: table;\n    width: 100%;\n\n    .block-menu {\n      width: 100%;\n    }\n  }\n\n}\n\nheader {\n  #block-islandora-solr-simple {\n    .form-type-textfield {\n      height: auto !important;\n    }\n\n    .form-item {\n      margin-top: 1.3rem;\n    }\n\n    #edit-submit {\n      padding-top: 9px;\n    }\n\n    h2 {\n      display: none !important;\n    }\n  }\n\n  .logo-two {\n    img {\n      max-width: 100px;\n    }\n  }\n\n  .header-main-menu {\n    width: 100%;\n\n    ul {\n      text-align: center;\n    }\n  }\n}\n\n@include zen-respond-to(m) {\n\n.not-front {\n\n  #block-islandora-solr-simple {\n\n    border-bottom: 0;\n    display: inline-block;\n    text-align: right;\n    width: 40%;\n    font-size: 13px;\n\n    .form-type-textfield {\n      height: auto !important;\n    }\n\n    .form-item {\n      margin-top: 1.3rem;\n    }\n\n    #edit-submit {\n      padding-top: 9px;\n    }\n\n    h2 {\n      display: none;\n    }\n  }\n\n  .logo-menu-wrapper {\n    width: 100%;\n    font-size: 0;\n    box-sizing: border-box;\n\n    div {\n      vertical-align: middle;\n    }\n\n    .header--block-one {\n      width: 30%;\n\n      img,\n      .logo-one,\n      .logo-two {\n        width: auto;\n      }\n\n    }\n\n    .header-main-menu {\n      width: 30%;\n      font-size: 13px;\n\n      .navbar {\n        text-align: right;\n      }\n    }\n  }\n}\n}\n\nheader {\n  .logo-menu-wrapper {\n    .logo-two,\n    .logo-one {\n      width: 40%;\n      img {\n        margin-top: 10px;\n      }\n    }\n  }\n\n  .header-main-menu {\n    a {\n      color: color(header-lnk);\n    }\n  }\n}\n\n    \n@include zen-respond-to(m) {\n   header,\n   .header {\n     text-align: left;\n\n    .logo-menu-wrapper {\n      .logo-two,\n      .logo-one {\n        width: auto;\n        img {\n          margin-top: auto;\n        }\n      }\n    }\n\n     &__region {\n       padding-bottom: 5px;\n\n       .block-menu {\n         width: auto;\n       }\n     }\n\n    &__logo {\n      float: left;\n    }\n\n    &__name-and-slogan {\n      float: left;\n      padding-bottom: 5px;\n    }\n  }\n}\n\n.top-background-image {\n  background-size: cover !important;\n}\n","// Hidden\n//\n// Hide elements from all users. Compare to the visually-hidden component.\n//\n// Used for elements which should not be immediately displayed to any user. An\n// example would be a collapsible fieldset that will be expanded with a click\n// from a user.\n//\n// For anything you want to hide on page load when JavaScript is enabled, use\n// the `.js-hidden` class.\n//\n// Markup: hidden.twig\n//\n// Style guide: components.hidden\n\n.hidden,\n%hidden {\n  display: none;\n}\n\n.js-hidden,\n%js-hidden {\n  html.js & {\n    @extend %hidden;\n  }\n}\n\n//\n// Drupal selectors.\n//\n\n.element-hidden {\n  @extend %js-hidden;\n}\n\n.js-hide {\n  @extend %js-hidden;\n}\n","// Highlight mark\n//\n// The \"new\" or \"updated\" marker. This is a very thin component. A front-end\n// developer may choose to delete this component and just style the `<mark>`\n// element directly.\n//\n// Markup: highlight-mark.twig\n//\n// Style guide: components.highlight-mark\n\n.highlight-mark,\n%highlight-mark {\n  color: color(mark-highlight);\n  // Remove background highlighting from <mark> in normalize.\n  background-color: transparent;\n}\n\n//\n// Drupal selectors. (In case a module doesn't use theme_mark().)\n//\n\n.new,\n.update {\n  @extend %highlight-mark;\n}\n","// Inline links\n//\n// A list of links that are inline with each other.\n//\n// Markup: inline-links.twig\n//\n// Style guide: components.inline-links\n\n.inline-links,\n%inline-links {\n  padding: 0;\n\n  &__item {\n    display: inline;\n    list-style-type: none;\n    padding: 0 1em 0 0;\n\n    @include rtl() {\n      // Bug in Safari causes display: inline to fail.\n      display: inline-block;\n      padding: 0 0 0 1em;\n    }\n  }\n}\n\n//\n// Drupal selectors.\n//\n\n.inline.links {\n  @extend %inline-links;\n\n  li {\n    @extend %inline-links__item;\n  }\n}\n","// Inline sibling\n//\n// An element that needs to appear inline with the content that follows.\n//\n// Markup: inline-sibling.twig\n//\n// Style guide: components.inline-sibling\n\n.inline-sibling,\n%inline-sibling {\n  display: inline;\n  margin-right: 10px;\n\n  @include rtl() {\n    margin-right: 0;\n    margin-left: 10px;\n  }\n\n  // All of the children of the element need to be inline as well.\n  &__child,\n  * {\n    display: inline;\n  }\n\n  // The next element (and its first-child element, if the markup is nested)\n  // needs to be inline.\n  &__adjacent,\n  + *,\n  + * > :first-child,\n  + * > :first-child > :first-child {\n    display: inline;\n  }\n}\n\n//\n// Drupal selectors.\n//\n\n// Drupal core.\n.field-label-inline {\n  .field-label {\n    @extend %inline-sibling;\n  }\n\n  // Revert core's ridiculous styling without polluting the component.\n  .field-label,\n  .field-items {\n    float: none;\n  }\n}\n\n// The inline field label used by the Fences 7.x-1.x module.\nspan.field-label {\n  @extend %inline-sibling;\n}\n","// Messages\n//\n// System alerts.\n//\n// Warning messages should use the `.messages--warning` class. Error messages\n// should use the `.messages--error` class.\n//\n// The icon shown is not part of the CSS; it is an SVG image in the HTML.\n//\n// Markup: messages.twig\n//\n// Style guide: components.messages\n\n// Message colors\n//\n// Drupal system status reports use just the message colors and no other\n// styling.\n//\n// .messages--ok-color      - \"Ok\" status.\n// .messages--warning-color - Warning status.\n// .messages--error-color   - Error status.\n//\n// Markup: messages--color.twig\n//\n// Style guide: components.messages--color\n\n.messages,\n%messages {\n  @extend %messages--ok-color;\n  @include margin(1 0);\n  position: relative;\n  padding: 10px 10px 10px 44px;\n  border: 1px solid color(status);\n\n  @include rtl() {\n    padding: 10px 44px 10px 10px;\n    background-position: 99% 8px;\n  }\n\n  &__icon {\n    position: absolute;\n    top: 50%;\n    left: 10px;\n    height: 24px;\n    width: 24px;\n    margin-top: -12px; // Half of the icon height.\n    line-height: 1;\n\n    @include rtl() {\n      left: auto;\n      right: 0;\n    }\n\n    // SVG icon fill.\n    path {\n      fill: color(status);\n    }\n  }\n\n  &__highlight {\n    color: color(status-highlight);\n  }\n\n  &__list {\n    margin: 0;\n  }\n\n  &__item {\n    list-style-image: none;\n  }\n\n  &--ok-color {\n    background-color: color(status-bg);\n    color: color(status);\n  }\n\n  &--warning-color {\n    background-color: color(warning-bg);\n    color: color(warning);\n  }\n\n  &--error-color {\n    background-color: color(error-bg);\n    color: color(error);\n  }\n\n  &--status {\n    @extend %messages;\n  }\n\n  &--warning {\n    @extend %messages--warning-color;\n    border-color: color(warning-border);\n\n    path {\n      fill: color(warning-border);\n    }\n  }\n\n  &--error {\n    @extend %messages--error-color;\n    border-color: color(error);\n\n    path {\n      fill: color(error);\n    }\n  }\n}\n\n//\n// Drupal selectors.\n//\n\n.messages {\n  &.warning {\n    @extend %messages--warning;\n  }\n\n  &.error {\n    @extend %messages--error;\n  }\n}\n\n.messages--error .error,\n.messages.error .error {\n  @extend %messages__highlight;\n}\n\n// System status report.\n.ok {\n  @extend %messages--ok-color;\n}\n\n.warning {\n  @extend %messages--warning-color;\n}\n\n.error {\n  @extend %messages--error-color;\n}\n\n// Node revisions.\n.revision-current {\n  @extend %messages--ok-color;\n}\n","// \"More\" link\n//\n// Styles the \"Read more…\" and \"Help\" links common in Drupal.\n//\n// Markup: more-link.twig\n//\n// Style guide: components.navigation.more-link\n\n.more-link,\n%more-link {\n  text-align: right;\n\n  @include rtl() {\n    text-align: left;\n  }\n\n  &__help-icon {\n    padding: 1px 0 1px 20px;\n    background-image: image-url('more-link/more-link__help-icon.svg');\n    background-position: 0 50%;\n    background-repeat: no-repeat;\n\n    @include rtl() {\n      padding: 1px 20px 1px 0;\n      background-position: 100% 50%;\n    }\n  }\n}\n\n//\n// Drupal selectors.\n//\n\n.more-help-link {\n  @extend %more-link;\n\n  a {\n    @extend %more-link__help-icon;\n  }\n}\n","// Nav menu\n//\n// A \"nav menu\" is secondary, hierarchical navigation which can be displayed to the\n// side or below the main content.\n//\n// Markup: nav-menu.twig\n//\n// Style guide: components.navigation.nav-menu\n\n.nav-menu,\n%nav-menu {\n\n  &__item {\n    list-style-image: image-url('nav-menu/leaf.svg');\n    list-style-type: square;\n\n    &.is-expanded,\n    &--is-expanded {\n      list-style-image: image-url('nav-menu/expanded.svg');\n      list-style-type: circle;\n    }\n\n    &.is-collapsed,\n    &--is-collapsed {\n      list-style-image: image-url('nav-menu/collapsed.svg');\n      list-style-type: disc;\n\n      @include rtl() {\n        list-style-image: image-url('nav-menu/collapsed-rtl.svg');\n      }\n    }\n  }\n\n  &__link {\n    &.is-active,\n    &--is-active {\n      color: color(menu-active);\n    }\n  }\n}\n\n//\n// Drupal selectors.\n//\n\n.menu__item {\n  @extend %nav-menu__item;\n\n  &.is-expanded {\n    @extend %nav-menu__item--is-expanded;\n  }\n\n  &.is-collapsed {\n    @extend %nav-menu__item--is-collapsed;\n  }\n}\n\n// The active item in a Drupal menu.\n.menu a.active {\n  @extend %nav-menu__link--is-active;\n}\n","// Dependencies.\n@import 'components/visually-hidden/visually-hidden';\n\n// Navbar\n//\n// A simple method to get navigation links to appear in one line.\n//\n// Markup: navbar.twig\n//\n// Style guide: components.navigation.navbar\n\n.navbar,\n%navbar {\n  margin: 0;\n  padding: 0;\n  text-align: left;\n\n  @include rtl() {\n    text-align: right;\n  }\n\n  &__item,\n  li {\n    float: left;\n    padding: 0 10px 0 0;\n    list-style-type: none;\n    list-style-image: none;\n\n    @include rtl() {\n      float: right;\n      padding: 0 0 0 10px;\n    }\n  }\n}\n\n//\n// Drupal selectors.\n//\n\n.main-navigation {\n  // Hide the block titles put into the main-navigation area of the page.tpl.php.\n  .block-menu .block__title,\n  .block-menu-block .block__title {\n    @extend %visually-hidden;\n  }\n\n  // Main menu and secondary menu links and menu block links.\n  .links,\n  .menu {\n    @extend %navbar;\n  }\n}\n","// Pager\n//\n// Paged navigation is a list of page numbers when more than 1 page of content\n// is available.\n//\n// Markup: pager.twig\n//\n// Style guide: components.navigation.pager\n\n.pager,\n%pager {\n  clear: both;\n  padding: 0;\n  text-align: center;\n\n  @media print {\n    display: none;\n  }\n\n  // A page item in the pager list.\n  &__item {\n    display: inline;\n    padding: 0 .5em;\n    list-style-type: none;\n    background-image: none;\n  }\n\n  // The current page's list item.\n  &__current-item {\n    @extend %pager__item;\n    font-weight: bold;\n  }\n}\n\n//\n// Drupal selectors.\n//\n\n// .pager-item     - A list item containing a page number in the list of pages.\n// .pager-first    - The first page's list item.\n// .pager-previous - The previous page's list item.\n// .pager-next     - The next page's list item.\n// .pager-last     - The last page's list item.\n// .pager-ellipsis - A concatenation of several list items using an ellipsis.\n\n.pager-item,\n.pager-first,\n.pager-previous,\n.pager-next,\n.pager-last,\n.pager-ellipsis {\n  @extend %pager__item;\n}\n\n.pager-current {\n  @extend %pager__current-item;\n}\n","// Do not print\n//\n// Removes an element from the print version of the web site.\n//\n// By importing these CSS rules in a file marked as media \"all\", we allow these\n// print rules to be aggregated with other stylesheets, for improved front-end\n// performance.\n//\n// Markup: print-none.twig\n//\n// Style guide: components.print-none\n\n.print-none,\n%print-none {\n  @media print {\n    display: none;\n  }\n}\n\n//\n// Drupal selectors.\n//\n\n// Hide Drupal nav elements.\n.toolbar,\n.action-links,\n.links,\n.book-navigation,\n.forum-topic-navigation,\n.feed-icons {\n  @extend %print-none;\n}\n","// Progress bar\n//\n// Shows the progress of a task in a simple bar graph.\n//\n// .progress-bar--inline - An inline progress bar.\n//\n// Markup: progress-bar.twig\n//\n// Style guide: forms.progress-bar\n\n.progress-bar,\n%progress-bar {\n  font-weight: bold;\n\n  &__bar {\n    border-radius: 3px;\n    margin: 0 .2em;\n    border: 1px solid color(progress-bar-border);\n    background-color: color(progress-bar-bg);\n  }\n\n  &__fill {\n    height: 1.5em;\n    width: 5px;\n    background: color(progress-bar) image-url('progress-bar/progress-bar.gif') repeat 0 0;\n  }\n\n  &__percentage {\n    float: right;\n\n    @include rtl() {\n      float: left;\n    }\n  }\n\n  &--inline {\n    width: 16em;\n    display: inline-block;\n\n    @include rtl() {\n      float: right;\n    }\n  }\n}\n\n//\n// Drupal selectors.\n//\n\n.progress {\n  @extend %progress-bar;\n\n  .bar {\n    @extend %progress-bar__bar;\n  }\n\n  .filled {\n    @extend %progress-bar__fill;\n  }\n\n  .percentage {\n    @extend %progress-bar__percentage;\n  }\n}\n\n.ajax-progress-bar {\n  @extend %progress-bar--inline;\n}\n","// Progress throbber\n//\n// Shows the progress of a task using a throbber.\n//\n// Markup: progress-throbber.twig\n//\n// Style guide: forms.progress-throbber\n\n.progress-throbber,\n%progress-throbber {\n  display: inline-block;\n\n  @include rtl() {\n    float: right;\n  }\n\n  &__widget {\n    background: image-url('progress-throbber/progress-throbber.gif') no-repeat 0 -18px transparent;\n    float: left;\n    height: 15px;\n    margin: 2px;\n    width: 15px;\n\n    @include rtl() {\n      float: right;\n    }\n  }\n\n  &__widget-in-tr {\n    margin: 0 2px;\n  }\n\n  &__message {\n    padding-left: 20px;\n  }\n}\n\n//\n// Drupal selectors.\n//\n\n.ajax-progress {\n  @extend %progress-throbber;\n\n  .throbber {\n    @extend %progress-throbber__widget;\n\n    tr & {\n      @extend %progress-throbber__widget-in-tr;\n    }\n  }\n\n  .message {\n    @extend %progress-throbber__message;\n  }\n}\n","// Resizable textarea\n//\n// A textarea that can be resized with a \"grippie\" widget.\n//\n// Markup: resizable-textarea.twig\n//\n// Style guide: forms.resizable-textarea\n\n.resizable-textarea,\n%resizable-textarea {\n  width: 100%;\n  vertical-align: bottom;\n\n  &__grippie {\n    background: image-url('resizable-textarea/grippie.png') no-repeat center 2px color(resizable-grippie);\n    border: 1px solid color(border);\n    border-top-width: 0;\n    cursor: s-resize;\n    height: 9px;\n    overflow: hidden;\n  }\n}\n\n//\n// Drupal selectors.\n//\n\n.resizable-textarea {\n  textarea {\n    @extend %resizable-textarea;\n  }\n\n  .grippie {\n    @extend %resizable-textarea__grippie;\n  }\n}\n","// Responsive video\n//\n// Using a wrapper div, embedded videos can be made responsive so that their\n// intrinsic aspect ratio is preserved at any screen width. The\n// `responsive-video__embed` class is optional if the embed is an `iframe`.\n//\n// .responsive-video--4-3 - A video with a 4:3 aspect ratio instead of the\n//                          default 16:9 one.\n//\n// Markup: responsive-video.twig\n//\n// Style guide: components.responsive-video\n\n.responsive-video,\n%responsive-video {\n  position: relative;\n  padding-bottom: (9/16)*100%; // 16:9 aspect ratio\n  padding-top: 25px; // Height of video controls\n  height: 0;\n\n  iframe {\n    @extend %responsive-video__embed;\n  }\n\n  &__embed {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  }\n\n  &--4-3 {\n    padding-bottom: (3/4)*100%; // 4:3 aspect ratio\n  }\n}\n\n//\n// Drupal selectors.\n//\n\n.media-youtube-video,\n.media-vimeo-preview-wrapper {\n  @extend %responsive-video;\n}\n","// Skip link\n//\n// To make the link completely hidden until a user tabs to the link, combine it\n// with the `visually-hidden` component.\n//\n// :focus - Focus styling.\n//\n// Markup: skip-link.twig\n//\n// Style guide: components.navigation.skip-link\n\n.skip-link,\n%skip-link {\n  margin-top: 0px;\n  margin-bottom: 0px;\n  display: none;\n  padding: 2px 0 3px;\n  text-align: center;\n\n  &:link,\n  &:visited {\n    background-color: color(skip-link-bg);\n    color: color(skip-link);\n  }\n\n  &__wrapper {\n    margin: 0;\n\n    @media print {\n      display: none;\n    }\n  }\n}\n\n#skip-link {\n  display: none;\n  margin: 0;\n}\n","// Table drag\n//\n// Drag and drop rows inside a form.\n//\n// If your custom theme isn't used for Drupal's admin pages, you can safely\n// delete this component to save file weight in the generated CSS.\n//\n// Markup: table-drag.twig\n//\n// Style guide: forms.table-drag\n\n.table-drag,\n%table-drag {\n  &__wrapper {\n    cursor: move;\n  }\n\n  &__item {\n    background-color: color(table-drag);\n  }\n\n  &__item-previous {\n    background-color: darken(color(table-drag), 5%);\n  }\n\n  &__handle {\n    cursor: move;\n    float: left;\n    height: 1.7em;\n    margin-left: -1em;\n    overflow: hidden;\n    text-decoration: none;\n    font-size: 12px;\n\n    @include rtl() {\n      float: right;\n      margin-right: -1em;\n      margin-left: 0;\n    }\n\n    &:focus,\n    &:hover {\n      text-decoration: none;\n    }\n  }\n\n  &__handle-icon {\n    box-sizing: content-box;\n    background: image-url('table-drag/handle-icon.png') no-repeat 6px 9px;\n    height: 13px;\n    margin: -.4em .5em;\n    padding: .42em .5em;\n    width: 13px;\n  }\n\n  &__handle.is-hover &__handle-icon,\n  &__handle-icon--is-hover {\n    background-position: 6px -11px;\n  }\n\n  &__toggle-weight-wrapper {\n    text-align: right;\n\n    @include rtl() {\n      text-align: left;\n    }\n  }\n\n  &__toggle-weight {\n    font-size: .9em;\n  }\n\n  &__indentation {\n    float: left;\n    height: 1.7em;\n    margin: -.4em .2em -.4em -.4em;\n    padding: .42em 0 .42em .6em;\n    width: 20px;\n\n    @include rtl() {\n      float: right;\n      margin: -.4em -.4em -.4em .2em;\n      padding: .42em .6em .42em 0;\n    }\n  }\n\n  &__tree-child {\n    background: image-url('table-drag/tree-child.png') no-repeat 11px center;\n\n    @include rtl() {\n      background-position: -65px center;\n    }\n  }\n\n  &__tree-child-last {\n    @extend %table-drag__tree-child;\n    background-image: image-url('table-drag/tree-child-last.png');\n  }\n\n  &__tree-child-horizontal {\n    @extend %table-drag__tree-child;\n    background-position: -11px center;\n  }\n}\n\n//\n// Drupal selectors.\n//\n\nbody.drag {\n  @extend %table-drag__wrapper;\n}\n\ntr.drag {\n  @extend %table-drag__item;\n}\n\ntr.drag-previous {\n  @extend %table-drag__item-previous;\n}\n\n.tabledrag-handle {\n  @extend %table-drag__handle;\n\n  .handle {\n    @extend %table-drag__handle-icon;\n  }\n}\n\n.tabledrag-handle-hover .handle {\n  @extend %table-drag__handle-icon--is-hover;\n}\n\n.tabledrag-toggle-weight-wrapper {\n  @extend %table-drag__toggle-weight-wrapper;\n}\n\n.tabledrag-toggle-weight {\n  @extend %table-drag__toggle-weight;\n}\n\n.indentation {\n  @extend %table-drag__indentation;\n}\n\n.tree-child {\n  @extend %table-drag__tree-child;\n}\n\n.tree-child-last {\n  @extend %table-drag__tree-child-last;\n}\n\n.tree-child-horizontal {\n  @extend %table-drag__tree-child-horizontal;\n}\n","// Dependencies.\n@import 'components/clearfix/clearfix';\n\n// Tabs\n//\n// The primary and secondary tabs.\n//\n// Markup: tabs.twig\n//\n// .tabs--secondary - Secondary tabs\n//\n// Style guide: components.navigation.tabs\n\n// Tabs (stacked)\n//\n// When the secondary tabs appear directly after the primary tabs, the styling\n// is slightly different.\n//\n// Markup: tabs--stacked.twig\n//\n// Style guide: components.navigation.tabs.primary\n\n.tabs,\n%tabs {\n  @extend %clearfix;\n\n  // The line height of a tab.\n  $tab-height: 1.25;\n\n  @include margin((2 - $tab-height) 0 0);\n  @include line-height($tab-height);\n  @if support-for(ie, 9) {\n    // IE 9 and earlier don't understand gradients.\n    border-bottom: 1px solid color(tabs-border) \\0/ie;\n  }\n  background-image: linear-gradient(to top, color(tabs-border) 1px, transparent 1px);\n  padding: 0 2px;\n  list-style: none;\n  white-space: nowrap;\n  margin-bottom: 10px;\n\n  @media print {\n    display: none;\n  }\n\n  &__tab {\n    width: 100%;\n    float: left;\n    margin: 5px;\n    border: 1px solid color(tabs-border);\n    @if support-for(ie, 9) {\n      // IE 9 and earlier don't understand gradients.\n      border-bottom: 0 \\0/ie;\n    }\n    // Clip the background colors on tab links.\n    overflow: hidden;\n    background: color(tab-bg);\n\n    @include rtl() {\n      float: right;\n    }\n\n    @include zen-respond-to(m) {\n      & {\n        // Allow the tabs gradient to appear just below the tab.\n        border-bottom-color: transparent;\n        width: auto;\n        margin: 0 5px;\n        border-top-left-radius: 10px;\n        border-top-right-radius: 10px;\n      }\n\n      &.is-active {\n      // Cover the tabs gradient with the same color as the background.\n      border-bottom-color: color(tabs-bg);\n      }\n    }\n  }\n\n  &__tab-link {\n    @include padding(0 1);\n    display: block;\n    text-decoration: none;\n    transition: color .3s, background .3s, border .3s;\n    text-shadow: color(tab-text-shadow) 0 1px 0;\n\n    color: color(white);\n    background: color(tab-bg);\n    letter-spacing: 1px;\n\n    &:focus,\n    &:hover {\n      background: lighten(color(tab-bg), 5%);\n    }\n\n    &:active,\n    &.is-active,\n    &--is-active {\n      background: color(teil);\n      text-shadow: none;\n      color: color(white);\n    }\n  }\n\n  // Turns off .tabs styling.\n  &--off {\n    @include margin(0);\n    @if support-for(ie, 9) {\n      border-bottom: 0;\n    }\n    padding: 0;\n    background-image: none;\n  }\n\n  &--secondary {\n    @include margin-top(1);\n    @include font-size(s);\n    background-image: none;\n  }\n\n  // When secondary tabs appear directly after primary tabs.\n  & + &--secondary {\n    @include margin-top(0);\n    background-image: linear-gradient(to top, color(tabs-border) 1px, transparent 1px);\n  }\n\n  &--secondary &__tab {\n    @include margin((2 - $tab-height)/2 3px);\n    border: 0;\n    background: transparent;\n\n    @include rtl() {\n      float: right;\n    }\n\n    &.is-active {\n      border-bottom-color: transparent;\n    }\n  }\n\n  &--secondary &__tab-link {\n    border: 1px solid color(tabs-border);\n    border-radius: $base-line-height;\n    color: color(tab-secondary);\n    background: lighten(color(tab-bg), 8%);\n    letter-spacing: normal;\n\n    &:focus,\n    &:hover {\n      color: darken(color(tab-secondary), 20%);\n      background: color(tab-bg);\n      border-color: darken(color(tab-bg), 26.5%);\n    }\n\n    &:active,\n    &.is-active,\n    &--is-active {\n      color: lighten(color(tab-bg), 15%);\n      text-shadow: darken(color(tab-secondary), 20%) 0 1px 0;\n      background: color(tab-secondary);\n      border-color: darken(color(tab-secondary), 40%);\n    }\n  }\n}\n\n//\n// Drupal selectors.\n//\n\n// Views mis-uses the theme hooks for tabs.\n.views-displays .secondary {\n  @extend %tabs--off;\n}\n","// Watermark\n//\n// Make the element appear beneath sibling elements, like a watermark.\n//\n// Markup: watermark.twig\n//\n// Style guide: components.watermark\n\n.watermark,\n%watermark {\n  @include typeface(compact);\n  display: block;\n  height: 0;\n  overflow: visible;\n  // Remove background highlighting from <mark> in normalize.\n  background-color: transparent;\n  color: color(watermark);\n  font-size: 75px;\n  line-height: 1;\n  text-align: center;\n  // sass-lint:disable no-color-literals\n  text-shadow: 0 0 1px rgba(0, 0, 0, .1);\n  word-wrap: break-word;\n}\n","// Footer\n//\n// This represents the default footer styling.\n//\n// This component can be extended by using:\n//   `@extend %footer;`\n//\n// Markup: footer.twig\n//\n// Style guide: components.footer\n\n%font-aw-icon {\n  font-family: 'FontAwesome';\n  margin: 0 5px 0 -15px;\n  color: $font-awesome-colour;\n  list-style: none;\n\n  :link {\n    color: $font-awesome-colour;\n  }\n}\n\n.footer,\n#footer,\n%footer {\n  @include clearfix();\n  background-color: #292929;\n  margin-top: 1.8em;\n  display: block;\n\n  .footer-logo {\n    float: left;\n  }\n\n  &--inner-div {\n    display: table;\n    width: 100%;\n    text-align: right;\n\n    .block {\n      display: table-cell;\n      vertical-align: middle;\n    }\n\n    #block-menu-menu-contact-menu {\n      .nav-menu__item,\n      .menu__item {\n        list-style: none !important;\n      }\n\n      ul.menu {\n        display: inline-block;\n        list-style-type: none;\n\n        li {\n          display: inline-block;\n          text-indent: 1.6em;\n\n          a,\n          .menu__link {\n            font-size: 75%;\n            list-style: none !important;\n            text-decoration: none !important;\n            color: $font-awesome-colour;\n\n            &:hover {\n              color: white;\n            }\n\n          }\n        }\n\n        .phone::before {\n          @extend %font-aw-icon;\n          content: '\\f095';\n        }\n\n        .chat-with-lib::before {\n          @extend %font-aw-icon;\n          content: '\\f075';\n        }\n\n        .email-sdsu::before {\n          @extend %font-aw-icon;\n          content: '\\f0e0';\n        }\n\n        .address::before {\n          @extend %font-aw-icon;\n          content: '\\f015';\n        }\n\n        a:hover {\n          color: white;\n        }\n      }\n    }\n  }\n\n  #block-menu-menu-footer-menu {\n    @include clearfix();\n    float: left;\n    text-align: left;\n\n    ul.menu {\n      font-size: 75%;\n      list-style: none;\n      padding-left: 5px;\n      margin: 1rem 0;\n\n      li {\n        list-style: none;\n        line-height: 1.3rem;\n\n        a,\n        a:visited {\n          color: white;\n          text-decoration: none;\n        }\n\n      }\n\n      .browse-dept::before {\n        @extend %font-aw-icon;\n        content: '\\f1ad';\n        color: white;\n      }\n\n      .browse-type::before {\n        @extend %font-aw-icon;\n        content: '\\f0ca';\n        color: white;\n      }\n\n      .browse-featured::before {\n        @extend %font-aw-icon;\n        content: '\\f006';\n        color: white;\n      }\n\n    }\n  }\n\n  #block-widgets-s-socialmedia-share-default {\n    @include clearfix();\n    float: right;\n\n    .widgets-element {\n      display: inline-block;\n\n      img {\n        width: 85%;\n      }\n    }\n\n  }\n\n}\n\n.page-bottom {\n  background-color: black;\n  border-top: 2px solid color(deep-red);\n  display: table;\n  width: 100%;\n\n  .page-bottom--standard {\n    padding: 0;\n  }\n\n  .footer-menu-wrapper > div {\n    display: inline-block;\n    vertical-align: middle;\n    color: $font-awesome-colour;\n  }\n\n  .copyright--menu {\n    clear: right;\n    float: right;\n    margin-top: -5px;\n    font-size: 75%;\n    padding-right: 12px;\n  }\n}\n","// Box\n//\n// A simple block highlighted style.\n//\n// A Drupal block is often styled as a box. However, this design component is\n// not applied to any blocks by default; it is used as an example of how to\n// build and document a CSS component.\n//\n// \"box\" is the name of our component, so we define a `.box` class that we can\n// apply to any HTML element that needs the box styling. We also provide a\n// `%box` placeholder selector so that we can easily extend the basic box\n// component with `@extend %box;`.\n//\n// Take a look at the source code for this component for more information about\n// building a good component.\n//\n// :hover - The hover/focus styling.\n// .box--highlight - The \"highlight\" box variant.\n//\n// Markup: box.twig\n//\n// Style guide: components.highlighted-block\n\n.highlighted-block,\n%highlighted-block {\n  &--normal {\n    .block-inner-wrapper {\n      @extend %inner-wrapper;\n      background-color: color(white);\n    }\n  }\n\n  &--green {\n    .block-inner-wrapper {\n      @extend %inner-wrapper;\n      background-color: color(dgi-green);\n      display: table-cell;\n      vertical-align: middle;\n      color: color(white);\n    }\n  }\n\n  &--menu {\n    background: -webkit-linear-gradient(color(menu-gradient-start), color(menu-gradient-end)); /* For Safari 5.1 to 6.0 */\n    background: -o-linear-gradient(color(menu-gradient-start), color(menu-gradient-end)); /* For Opera 11.1 to 12.0 */\n    background: -moz-linear-gradient(color(menu-gradient-start), color(menu-gradient-end)); /* For Firefox 3.6 to 15 */\n    background: linear-gradient(color(menu-gradient-start), color(menu-gradient-end));\n  }\n}\n\n%inner-wrapper {\n  padding: 10px;\n  box-shadow: 0 0 5px 1px rgba(38, 37, 38, .3);\n}\n","// Islandora Simple Search\n//\n// Islandora simple search styling.\n//\n// Markup: islandora-simple-search.twig\n//\n// Style guide: components.islandora-simple-search\n\n%font-search-icon {\n  font-family: 'FontAwesome';\n  margin: 0 5px 0 -15px;\n  list-style: none;\n  content: '\\f002';\n}\n\n#block-islandora-solr-simple,\n%block-islandora-solr-simple {\n  border-bottom: 1px solid #ccc;\n\n  .block__title,\n  .content {\n    display: inline-block;\n  }\n\n  .block-inner-wrapper {\n    text-align: center;\n  }\n\n  h2::before {\n    @extend %font-search-icon;\n  }\n\n  h2 {\n    color: color('teil');\n  }\n\n  #edit-simple .form-item,\n  #edit-simple #edit-submit,\n  #edit-simple .adv-search  {\n    display: inline-block;\n  }\n\n  .adv-search {\n    @extend %button-link;\n  }\n/*   .adv-search:hover { */\n/*     color: color(button-link-border) !important; */\n/*   } */\n\n  #edit-simple {\n/*     padding-top: 7px; */\n/*     text-align: right; */\n\n/*     .adv-search { */\n/*       font-size: .8em; */\n/*       text-decoration: none; */\n/*     } */\n\n    .form-type-textfield {\n      line-height: 2.44em;\n      height: 2.44em;\n/*       margin: 0; */\n\n/*       .form-text { */\n/*         border: 1px solid #ccc; */\n/*         border-radius: 5px; */\n/*         box-shadow: 0 3px 3px -3px #808184; */\n/*         color: #808184; */\n/*         height: 2.5em; */\n/*         padding-left: .5em; */\n/*         width: 100%; */\n/*       } */\n    }\n\n/*     .form-submit { */\n/*       background: image-url('images/search_btn.png') no-repeat scroll 0 0 transparent; */\n/*       border: medium none; */\n/*       color: transparent; */\n/*       height: 25px; */\n/*       position: relative; */\n/*       float: right; */\n/*       right: 5px; */\n/*       top: -30px; */\n/*       width: 25px; */\n/*     } */\n  }\n}\n","// Featured Collections\n//\n// The front page featured collections.\n// This utilizes zen-respond-to(m) to respond to a medium\n// width as defined in the themes _variables.scss file\n// (as 'm') to control the stacking of child elements on smaller\n// screen sizes. This is a layout integrated into \n// islandora_solr_views, utilizing default class\n// selectors such as .views-row. Further customizations\n// are available on this views configuration page.\n//\n// This component can be extended by using:\n//   `@extend %featured-collections;`\n//\n// Markup: featured-collections.twig\n//\n// Style guide: components.featured-collections\n\n.featured-collections,\n%featured-collections {\n  @include clearfix();\n  background-attachment: scroll;\n  background-clip: border-box;\n  background-image: none;\n  background-origin: padding-box;\n  background-position: 0 0;\n  background-repeat: repeat;\n  background-size: auto auto;\n  float: left;\n  padding: 15px;\n  margin-bottom: 10px;\n\n  .block-inner-wrapper {\n    @include clearfix();\n    float: left;\n  }\n\n  h2.block__title {\n    border-bottom: 1px solid color(grey-light);\n  }\n\n  .views-row {\n    @include clearfix();\n    float: left;\n    max-width: 100%;\n    padding-bottom: 1em;\n    padding-left: 0;\n    padding-right: 1em;\n    padding-top: 1em;\n    word-wrap: break-word;\n\n    a {\n      color: color(dgi_anchor);\n      font-size: 100%;\n      font-weight: bold;\n      text-decoration: none;\n\n      img {\n        float: left;\n        height: 115px;\n        padding-right: 10px;\n        width: 115px;\n      }\n    }\n  }\n\n  @include zen-respond-to(m) {\n    .views-row {\n      max-width: 47%;\n    }\n  }\n}\n","// Islandora Basic Collections (Grid Item/list Item)\n//\n// This styles basic layout and hover effects on object thumbs\n// and grid. All styling is provided by the theme.\n// The islandora solution pack collection provides its\n// own css, in the 'css/islandora_basic_collection.base.css'\n// file and 'css/islandora_basic_collection.theme.css' file.\n// This theme will override these files using the\n// 'hook_css_alter()' in the theme template.php. All of these styles\n// have been embeded here, using a %islandora-basic-collection\n// placeholder (.scss), to allow one to easily extend its styling.\n//\n// Markup: islandora-basic-collection.twig\n//\n// Style guide: components.islandora-basic-collections\n\n.islandora-basic-collection,\n%islandora-basic-collection {\n  overflow: hidden;\n  width: 100%;\n  margin: 1.5em auto;\n\n  &-list-item {\n    padding-bottom: 1.5em;\n    border-bottom: 1px solid #ddd;\n    clear: both;\n    width: 100%;\n\n    dl {\n      dt {\n        clear: left;\n        float: left;\n        padding: 3px 0 0;\n        text-align: center;\n        width: 100px;\n      }\n\n      dd {\n        margin: 0 0 0 130px;\n      }\n    }\n  }\n\n  &-object {\n    transition: transform .2s ease;\n\n    dt {\n      img {\n        -webkit-border-radius: 5px;\n        -moz-border-radius: 5px;\n        border-radius: 5px;\n      }\n    }\n\n    dd {\n      padding-top: 2px;\n      padding-bottom: 2px;\n    }\n\n    &:hover {\n      transform: scale(1.1);\n    }\n  }\n\n  &-display-switch {\n    ul {\n      margin-top: 0;\n      margin-bottom: 0;\n      float: right;\n    }\n  }\n\n  &-grid {\n    text-align: center;\n\n    dl {\n      width: 20%;\n      min-width: 100px;\n      min-height: 180px;\n      display: -moz-inline-stack;\n      display: inline-block;\n      vertical-align: top;\n      margin: 1.5em 1.84%;\n      zoom: 1;\n    }\n\n    dd {\n      margin: 0;\n      padding: 0;\n    }\n  }\n}\n\n.islandora-inline-metadata {\n  p {\n    margin: 0;\n  }\n}\n","// Header Menu\n//\n// The menu block that appears on every page.\n//\n// Markup: menu-header-menu.twig\n//\n// Style guide: components.header-menu\n\n#block-menu-menu-header-menu,\n%block-menu-menu-header-menu {\n  @include clearfix();\n  float: right;\n  font-size: 85%;\n  line-height: 2.5em;\n  display: block;\n\n  ul.menu {\n    @include clearfix();\n    margin: 0 .8em;\n    padding-left: 15px;\n\n    li {\n      display: inline-block;\n      margin: 0 .8em;\n\n      a {\n        color: white;\n\n        &:hover {\n          color: #419845;\n        }\n\n        &:link {\n          text-decoration: none;\n        }\n      }\n\n    }\n\n    li.first {\n      margin-left: 0;\n    }\n\n  }\n\n}\n\n.logo-menu-wrapper {\n  div {\n    display: inline-block;\n    vertical-align: middle;\n  }\n\n  .logo-one {\n    width: 19%;\n  }\n\n  .logo-two {\n    width: 19%;\n  }\n\n  .header-main-menu {\n    width: 55%;\n  }\n}\n","// Menu Header Menu\n\n.submit-collection,\n.submit-collection-anon {\n  display: table;\n  width: 100%;\n  font-size: 130%;\n  font-weight: normal;\n  height: 70px;\n  line-height: 2.9em;\n  margin-bottom: 0;\n  min-height: 100px;\n\n  p {\n    margin: 0 auto;\n    text-align: center;\n\n    a {\n      text-decoration: none;\n      color: white;\n    }\n  }\n\n}\n","// Frontpage Slideshow\n//\n// The front page featured collections.\n// This utilizes zen-respond-to(m) to respond to a medium\n// width as defined in the themes _variables.scss file\n// (as 'm') to control the stacking of child elements on smaller\n// screen sizes. This is a layout integrated into \n// islandora_solr_views, utilizing default class\n// selectors such as .views-row. Further customizations\n// are available on this views configuration page.\n//\n// Markup: slideshow.twig\n//\n// Style guide: components.slideshow\n\n.flexslider {\n  margin-bottom: 0;\n}\n\n\n#flex-thumbs {\n  border: 0;\n\n  ul.slides {\n\n    li {\n      max-width: 50px;\n      margin: 5px;\n\n      div,\n      img,\n      .front-page-slideshow-thumb {\n        max-width: 50px;\n        width: 50px;\n        height: 50px;\n        margin: 5px;\n        cursor: pointer;\n      }\n    }\n  }\n}\n\n#flex-gallery {\n  border: 0;\n\n  .flex-control-paging {\n    display: none;\n  }\n\n  .info-content-wrapper {\n    background-color: rgba(0, 0, 0, .4);\n    bottom: 0;\n    box-sizing: border-box;\n    padding: 5px;\n    position: absolute;\n    width: 100%;\n\n    .title-field {\n      transition: opacity .3s ease .31s;\n      display: block;\n      font-size: 200%;\n\n      a {\n        color: #5a5b5d;\n        font-family: 'Ropa Sans', sans-serif;\n        font-weight: normal;\n        color: white;\n        text-decoration: none;\n        text-shadow: 0 -1px 0 rgba(0, 0, 0, .3);\n      }\n    }\n\n    .desc-field {\n      color: white;\n      text-shadow: 0 -1px 0 rgba(0, 0, 0, .3);\n      display: block;\n      top: 0;\n      transition: opacity .3s ease .31s;\n    }\n\n    .slideshowe-more-link {\n      @extend %button-link;\n      background-color: color(button-link-border);\n      color: color(button-link-background);\n      max-width: 100%;\n      padding-top: 10px;\n      padding-bottom: 10px;\n      margin-top: 5px;\n\n      &:hover {\n        color: black !important;\n      }\n    }\n  }\n\n  .flex-direction-nav a,\n  .flex-direction-nav a {\n    display: block !important;\n  }\n\n  .flex-direction-nav {\n    .flex-next {\n      opacity: 1;\n      padding-top: 20px;\n/*       right: 48%; */\n      height: 50px;\n    }\n\n    .flex-prev {\n      left: 10%;\n      opacity: 1;\n      height: 50px;\n      padding-top: 20px;\n    }\n\n    a::before {\n      color: rgba(255, 255, 255, .8);\n    }\n  }\n}\n\n.front__slider .owl-item > div .info-content-wrapper,\n.front-slider .owl-item > div .info-content-wrapper,\n#flex-gallery .info-content-wrapper {\n  background-color: rgba(0, 0, 0, 0);\n  box-sizing: border-box;\n  max-width: 100%;\n  padding-bottom: 5px;\n  padding-left: 16%;\n  padding-right: 5px;\n  padding-top: 5px;\n  position: absolute;\n  bottom: auto;\n  top: 30%;\n  width: 100%;\n}\n\n.front__slider .owl-controls.clickable .owl-buttons,\n.front-slider .owl-controls.clickable .owl-buttons {\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1175px;\n  position: relative;\n  top: 40%;\n}\n\n.view-thumbs.owl-carousel.owl-theme {\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1175px;\n  width: 100%;\n\n  .owl-item {\n    width: auto !important;\n  }\n\n  img {\n    width: 100%;\n    height: 100%;\n    max-width: 3em;\n  }\n}\n\n.footer-thumb {\n  height: 35px;\n  width: 35px;\n\n  img {\n    width: 100%;\n    height: 100%;\n  }\n}\n\n.front-page-slideshow-image,\n.front-page-slideshow-image-pid {\n  width: 100%;\n  height: 340px;\n}\n\n%font-aw-icon {\n  font-family: 'FontAwesome';\n  margin: 0 5px 0 -15px;\n  color: $font-awesome-colour;\n  list-style: none;\n\n  :link {\n    color: $font-awesome-colour;\n  }\n}\n\n.gallery-wrapper {\n  width: 30%;\n  display: inline-block;\n}\n","// JW Player\n//\n// Plaform default JW player style configurations\n//\n\n#mediaplayer,\n%mediaplayer {\n  max-width: 100%;\n}\n","// Box\n//\n// A simple box style.\n//\n// A Drupal block is often styled as a box. However, this design component is\n// not applied to any blocks by default; it is used as an example of how to\n// build and document a CSS component.\n//\n// \"box\" is the name of our component, so we define a `.box` class that we can\n// apply to any HTML element that needs the box styling. We also provide a\n// `%box` placeholder selector so that we can easily extend the basic box\n// component with `@extend %box;`.\n//\n// Take a look at the source code for this component for more information about\n// building a good component.\n//\n// :hover - The hover/focus styling.\n// .box--highlight - The \"highlight\" box variant.\n//\n// Markup: box.twig\n//\n// Style guide: components.box\n\n%featured-box-header-image-base {\n  background-attachment: scroll;\n  background-clip: border-box;\n  background-color: rgba(0, 0, 0, 0);\n  background-origin: padding-box;\n  background-position: center center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  border-top-left-radius: 3px;\n  border-top-right-radius: 3px;\n  width: 100%;\n  height: 50px;\n}\n\n%font-box-icon {\n  font-family: 'FontAwesome';\n  margin: 0 15px 0 -15px;\n  color: white;\n  list-style: none;\n\n  :link {\n    color: $font-awesome-colour;\n  }\n}\n\n%box-li-bullet {\n  font-family: 'FontAwesome';\n  margin: 0 5px 0 -15px;\n  color: color(deep-red);\n  list-style-image: none !important;\n  list-style-type: none !important;\n}\n\n.featured-box,\n%featured-box {\n  position: relative;\n  display: inline-block;\n  margin: 2% 0;\n  background-color: color(featured-box);\n  text-align: left;\n  box-sizing: border-box;\n  vertical-align: middle;\n  width: 100%;\n  border-radius: 3px;\n  height: 18em;\n\n  h2 {\n    font-size: 1.2rem;\n    line-height: 1rem;\n    margin-bottom: .8rem;\n    margin-top: .8rem;\n    padding-left: 40px;\n    color: white;\n    font-weight: lighter;\n  }\n\n  .content {\n    border-top: 1px solid white;\n\n    a {\n      color: white;\n      text-decoration: none;\n\n      &:link {\n        color: white;\n      }\n    }\n  }\n\n  ul.menu {\n    position: relative;\n\n    li::before {\n      @extend %box-li-bullet;\n      content: '\\f105';\n    }\n  }\n\n  &--bottom-link {\n    bottom: 0;\n    position: absolute;\n    right: 1em;\n\n    ul {\n      margin-top: .5rem;\n      margin-bottom: .5rem;\n      margin-right: 1em;\n\n      li {\n        list-style: none;\n        list-style-image: none;\n      }\n\n      li::before {\n        @extend %box-li-bullet;\n        content: '\\f105';\n      }\n\n      a,\n      :link {\n        text-decoration: none;\n        color: white;\n      }\n    }\n  }\n\n  &--dept {\n    @extend %featured-box-header-image-base;\n    background-image: image-url('featured-box/dept-back');\n\n    h2::before {\n      @extend %font-box-icon;\n      content: '\\f1ad';\n    }\n\n  }\n\n  &--type {\n    @extend %featured-box-header-image-base;\n    background-image: image-url('featured-box/type-back');\n  }\n\n  &--feat {\n    @extend %featured-box-header-image-base;\n    background-image: image-url('featured-box/featured-back');\n  }\n\n  .block-inner-wrapper {\n    height: 100%;\n\n    ul.menu {\n      position: relative;\n\n      li {\n        list-style-type: none;\n        list-style-image: none;\n      }\n\n      li::before {\n        @extend %box-li-bullet;\n        content: '\\f105';\n      }\n\n      li.last {\n        position: absolute;\n        bottom: 0;\n        right: 0;\n      }\n    }\n  }\n}\n\n@include zen-respond-to(m) {\n  .featured-box {\n    width: 25%;\n    margin: 2%;\n  }\n}\n\n.featured-box--dept--block {\n  h2::before {\n    @extend %font-box-icon;\n    content: '\\f0f7';\n    color: white;\n  }\n}\n\n.featured-box--feat--block {\n  h2::before {\n    @extend %font-box-icon;\n    content: '\\f006';\n    color: white;\n  }\n}\n\n.featured-box--type--block {\n  h2::before {\n    @extend %font-box-icon;\n    content: '\\f0ca';\n    color: white;\n  }\n}\n","// Box\n//\n// A simple box style.\n//\n// A Drupal block is often styled as a box. However, this design component is\n// not applied to any blocks by default; it is used as an example of how to\n// build and document a CSS component.\n//\n// \"box\" is the name of our component, so we define a `.box` class that we can\n// apply to any HTML element that needs the box styling. We also provide a\n// `%box` placeholder selector so that we can easily extend the basic box\n// component with `@extend %box;`.\n//\n// Take a look at the source code for this component for more information about\n// building a good component.\n//\n// :hover - The hover/focus styling.\n// .box--highlight - The \"highlight\" box variant.\n//\n// Markup: box.twig\n//\n// Style guide: components.box\n\n%box-li-bullet {\n  font-family: 'FontAwesome';\n  margin: 0 5px 0 0;\n  color: color(deep-red);\n  list-style-image: none !important;\n  list-style-type: none !important;\n}\n\n.browse-collections,\n%browse-collections {\n  h2 {\n    margin-bottom: 0;\n    margin-top: .5rem;\n\n    a {\n      color: color(sdsu-red);\n      font-weight: lighter;\n      text-decoration: none;\n    }\n  }\n\n  .field-content {\n    margin: 15px;\n  }\n\n  td {\n    width: 50%;\n    box-sizing: border-box;\n    padding: 20px;\n  }\n\n  .views-field-PID {\n    float: left;\n    clear: left;\n  }\n\n  .browse-all-collections-thumb {\n    box-sizing: border-box;\n    margin: 12px;\n  }\n\n  .browse-collections-sub-link {\n    text-align: left;\n\n    li::before {\n      @extend %box-li-bullet;\n      content: '\\f105';\n    }\n\n    li {\n      list-style: none;\n      list-style-image: none;\n\n      a {\n        color: color(sdsu-red);\n        font-size: 85%;\n        font-weight: lighter;\n        text-decoration: none;\n      }\n    }\n  }\n}\n\n.islandora-objects {\n  text-align: center;\n}\n\n.islandora-solr-facet-pages-results {\n  td {\n    box-sizing: border-box;\n    padding: 10px;\n  }\n\n  .views-field-PID {\n    .field-content {\n    h2 {\n      margin-top: .5rem;\n      padding-left: 10px;\n    }\n\n    a,\n    h2 {\n      display: inline-block;\n      vertical-align: top;\n      font-weight: lighter;\n    }\n\n    div {\n      display: table;\n      height: 120px;\n      text-align: center;\n      width: 120px;\n      background-color: color('white');\n      border: 1px solid grey;\n\n      i {\n        display: table-cell;\n        font-size: 60px;\n        vertical-align: middle;\n        color: color(link-visited);\n        }\n      }\n    }\n  }\n}\n","// Box\n//\n// A simple box style.\n//\n// A Drupal block is often styled as a box. However, this design component is\n// not applied to any blocks by default; it is used as an example of how to\n// build and document a CSS component.\n//\n// \"box\" is the name of our component, so we define a `.box` class that we can\n// apply to any HTML element that needs the box styling. We also provide a\n// `%box` placeholder selector so that we can easily extend the basic box\n// component with `@extend %box;`.\n//\n// Take a look at the source code for this component for more information about\n// building a good component.\n//\n// :hover - The hover/focus styling.\n// .box--highlight - The \"highlight\" box variant.\n//\n// Markup: box.twig\n//\n// Style guide: components.box\n\n%font-aw-icon {\n  font-family: 'FontAwesome';\n  margin: 0 5px 0 -15px;\n  color: $font-awesome-colour;\n  list-style: none;\n\n  :link {\n    color: $font-awesome-colour;\n  }\n}\n\n.view-featured-object-collection.view-display-id-page,\n%view-featured-object-collection.view-display-id-page {\n\n  .views-row {\n    width: 100%;\n    max-width: 18%;\n    display: inline-block;\n\n    .view-featured-object-collection--pid {\n      width: 150px;\n      height: 150px;\n    }\n  }\n\n  .views-row-first {\n    width: 100%;\n    max-width: 100%;\n\n    .view-featured-object-collection--top {\n\n      span {\n         font-size: 2rem;\n         color: color('deep-red');\n         display: block;\n         margin: .5em auto;\n      }\n    }\n\n    .view-featured-object-collection--left {\n      display: inline-block;\n      height: 250px;\n      width: 70%;\n\n      .view-featured-object-collection--pid {\n        height: 250px;\n        width: 100%;\n      }\n    }\n\n    .view-featured-object-collection--right {\n      display: inline-block;\n      vertical-align: top;\n      max-width: 28%;\n      box-sizing: border-box;\n      padding: 10px;\n\n      ul {\n        padding-left: 0;\n      }\n\n      li {\n        list-style-type: none;\n        list-style-image: none;\n      }\n\n      li::before {\n        @extend %box-li-bullet;\n        content: '\\f105';\n      }\n    }\n  }\n\n}\n\n\n.view-featured-object-collection.view-display-id-block {\n  .views-row {\n    display: inline-block;\n    width: 10%;\n    vertical-align: top;\n    box-sizing: border-box;\n    margin: 10px;\n\n    .field-content {\n      div {\n        text-align: center;\n      }\n    }\n\n    span {\n      display: block;\n      text-align: left;\n      font-style: italic;\n    }\n\n  }\n\n  .view-footer {\n    font-size: 85%;\n\n    ul {\n      padding-left: 0;\n    }\n\n    li {\n      list-style-type: none;\n      list-style-image: none;\n    }\n\n    li::before {\n      @extend %box-li-bullet;\n      content: '\\f105';\n    }\n  }\n}\n\n.related-object-block-border-bottom {\n  border-bottom: 1px solid #ccc;\n}\n\n.view-related-featured-object-collection {\n  .views-row {\n    margin-top: 1.3em;\n  }\n\n  .view-content > div {\n    display: inline-block;\n    vertical-align: top;\n    width: 30%;\n\n    .info-image {\n      clear: left;\n      float: left;\n    }\n\n    .info-content {\n      float: left;\n      clear: left;\n    }\n\n    .info-content > span {\n      display: block;\n      width: 100%;\n    }\n\n    .info-content a,\n    .info-content > span a {\n      font-size: 85%;\n\n      &::before {\n        @extend %box-li-bullet;\n        content: '\\f105';\n      }\n\n      img {\n        max-width: 100px;\n      }\n    }\n\n    img {\n      height: auto;\n      max-width: 120px;\n      width: 100%;\n    }\n  }\n}\n\n.block.sdsu-inline-block {\n  display: table-cell;\n}\n\n#block-views-submit-a-collection-block {\n  .views-field-title {\n    font-size: 140%;\n\n    a::before {\n      @extend %box-li-bullet;\n      content: '\\f105';\n    }\n\n    a {\n      color: color('deep-red');\n    }\n  }\n\n  .views-field-field-sub-description {\n    margin: 5px auto 10px;\n  }\n}\n","// Box\n//\n// A simple box style.\n//\n// A Drupal block is often styled as a box. However, this design component is\n// not applied to any blocks by default; it is used as an example of how to\n// build and document a CSS component.\n//\n// \"box\" is the name of our component, so we define a `.box` class that we can\n// apply to any HTML element that needs the box styling. We also provide a\n// `%box` placeholder selector so that we can easily extend the basic box\n// component with `@extend %box;`.\n//\n// Take a look at the source code for this component for more information about\n// building a good component.\n//\n// :hover - The hover/focus styling.\n// .box--highlight - The \"highlight\" box variant.\n//\n// Markup: box.twig\n//\n// Style guide: components.box\n\n.search-results,\n%search-results {\n  width: 100%;\n\n  h1.search-main-title {\n    color: color('teil');\n  }\n\n  .search-tools {\n\n    .search-count-sort {\n\n      > div {\n        display: inline-block;\n        width: 49%;\n      }\n    }\n  }\n\n  .search-main-title {\n    margin-bottom: 0;\n    margin-top: 0;\n  }\n\n  .islandora-solr-query-list,\n  .islandora-solr-filter-list {\n\n    li {\n      @extend %facet-button;\n      color: black;\n\n      &:hover,\n      &:focus,\n      &:active {\n        color: black;\n      }\n    }\n  }\n\n  .remove-fct-x {\n    background-color: color('teil');\n    border-bottom-left-radius: 10px;\n    border-bottom-right-radius: 10px;\n    border-top-left-radius: 10px;\n    border-top-right-radius: 10px;\n    box-sizing: border-box;\n    display: block;\n    float: right;\n    padding-right: 5px;\n    padding-left: 6px;\n    color: white;\n    margin-left: 5px;\n\n    &:hover,\n    &:focus,\n    &:active {\n      color: black;\n    }\n  }\n}\n\n.page-islandora-search {\n  .islandora-solr-content {\n    border-top: 1px solid color(grey-light);\n  }\n}\n\nul.islandora-solr-sort,\nul.islandora-solr-query-list {\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.islandora-solr-content {\n\n  .solr-fields dt,\n  .solr-fields dd {\n    border: 0;\n  }\n\n  dt.label-value {\n    padding: 5px;\n    width: 20.625%;\n  }\n\n  dt.label-empty {\n    padding: 5px;\n    width: auto;\n  }\n\n  dl.solr-fields {\n    border: 0;\n  }\n\n  dd.solr-first-meta {\n    font-size: 125%;\n  }\n\n  .islandora-inline-metadata dd {\n    padding-left: 0;\n  }\n\n  .solr-link-obj::before {\n    @extend %box-li-bullet;\n    content: '\\f105';\n  }\n}\n\n#block-islandora-solr-current-query {\n  text-align: right;\n\n  h3 {\n    display: none;\n  }\n\n  .islandora-solr-query-list li {\n    display: inline-block;\n  }\n}\n\n#block-islandora-solr-sort {\n  text-align: right;\n\n  .islandora-solr-sort {\n\n    li {\n      display: inline-block;\n      padding: 0 10px;\n\n      a {\n        color: black;\n      }\n    }\n\n    li.last {\n      padding: 0 0 0 10px;\n    }\n  }\n}\n","// Box\n//\n// A simple box style.\n//\n// A Drupal block is often styled as a box. However, this design component is\n// not applied to any blocks by default; it is used as an example of how to\n// build and document a CSS component.\n//\n// \"box\" is the name of our component, so we define a `.box` class that we can\n// apply to any HTML element that needs the box styling. We also provide a\n// `%box` placeholder selector so that we can easily extend the basic box\n// component with `@extend %box;`.\n//\n// Take a look at the source code for this component for more information about\n// building a good component.\n//\n// :hover - The hover/focus styling.\n// .box--highlight - The \"highlight\" box variant.\n//\n// Markup: box.twig\n//\n// Style guide: components.box\n\n.book-page-tools,\n%book-page-tools {\n  > div {\n    display: inline-block;\n  }\n\n  #book-page-viewer {\n    width: 80%;\n  }\n\n  .view-subsequent-pages {\n    width: 100%;\n    position: relative;\n    max-height: 500px;\n    overflow: scroll;\n\n    .item-list {\n      position: absolute;\n      top: 0;\n    }\n\n    &--image img {\n      max-width: 100px;\n    }\n\n    .views-row {\n      text-align: center;\n\n      p {\n        margin-top: 0;\n        margin-bottom: .5em;\n      }\n    }\n  }\n\n  .subsequent-pages-wrapper {\n    width: 18%;\n  }\n}\n"],"sourceRoot":"/source/"}